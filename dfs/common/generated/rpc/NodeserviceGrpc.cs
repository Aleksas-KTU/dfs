// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc/nodeservice.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NodeService {
  public static partial class NodeService
  {
    static readonly string __ServiceName = "NodeService.NodeService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.ObjectOptions> __Marshaller_NodeService_ObjectOptions = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.ObjectOptions.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.Path> __Marshaller_NodeService_Path = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.Path.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RpcCommon.Hash> __Marshaller_rpc_common_Hash = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RpcCommon.Hash.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RpcCommon.Empty> __Marshaller_rpc_common_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RpcCommon.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RpcCommon.GuidList> __Marshaller_rpc_common_GuidList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RpcCommon.GuidList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.Progress> __Marshaller_NodeService_Progress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.Progress.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RpcCommon.Guid> __Marshaller_rpc_common_Guid = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RpcCommon.Guid.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Fs.ObjectList> __Marshaller_fs_ObjectList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Fs.ObjectList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.ObjectFromDiskOptions> __Marshaller_NodeService_ObjectFromDiskOptions = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.ObjectFromDiskOptions.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.PublishingOptions> __Marshaller_NodeService_PublishingOptions = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.PublishingOptions.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.DownloadContainerOptions> __Marshaller_NodeService_DownloadContainerOptions = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.DownloadContainerOptions.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NodeService.String> __Marshaller_NodeService_String = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NodeService.String.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NodeService.ObjectOptions, global::NodeService.Path> __Method_PickObjectPath = new grpc::Method<global::NodeService.ObjectOptions, global::NodeService.Path>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PickObjectPath",
        __Marshaller_NodeService_ObjectOptions,
        __Marshaller_NodeService_Path);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Hash, global::NodeService.Path> __Method_GetObjectPath = new grpc::Method<global::RpcCommon.Hash, global::NodeService.Path>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjectPath",
        __Marshaller_rpc_common_Hash,
        __Marshaller_NodeService_Path);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Hash, global::RpcCommon.Empty> __Method_RevealObjectInExplorer = new grpc::Method<global::RpcCommon.Hash, global::RpcCommon.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RevealObjectInExplorer",
        __Marshaller_rpc_common_Hash,
        __Marshaller_rpc_common_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Empty, global::RpcCommon.GuidList> __Method_GetAllContainers = new grpc::Method<global::RpcCommon.Empty, global::RpcCommon.GuidList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllContainers",
        __Marshaller_rpc_common_Empty,
        __Marshaller_rpc_common_GuidList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Hash, global::NodeService.Progress> __Method_GetDownloadProgress = new grpc::Method<global::RpcCommon.Hash, global::NodeService.Progress>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDownloadProgress",
        __Marshaller_rpc_common_Hash,
        __Marshaller_NodeService_Progress);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Guid, global::Fs.ObjectList> __Method_GetContainerObjects = new grpc::Method<global::RpcCommon.Guid, global::Fs.ObjectList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetContainerObjects",
        __Marshaller_rpc_common_Guid,
        __Marshaller_fs_ObjectList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RpcCommon.Guid, global::RpcCommon.Hash> __Method_GetContainerRootHash = new grpc::Method<global::RpcCommon.Guid, global::RpcCommon.Hash>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetContainerRootHash",
        __Marshaller_rpc_common_Guid,
        __Marshaller_rpc_common_Hash);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NodeService.ObjectFromDiskOptions, global::RpcCommon.Guid> __Method_ImportObjectFromDisk = new grpc::Method<global::NodeService.ObjectFromDiskOptions, global::RpcCommon.Guid>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportObjectFromDisk",
        __Marshaller_NodeService_ObjectFromDiskOptions,
        __Marshaller_rpc_common_Guid);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NodeService.PublishingOptions, global::RpcCommon.Empty> __Method_PublishToTracker = new grpc::Method<global::NodeService.PublishingOptions, global::RpcCommon.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PublishToTracker",
        __Marshaller_NodeService_PublishingOptions,
        __Marshaller_rpc_common_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NodeService.DownloadContainerOptions, global::RpcCommon.Empty> __Method_DownloadContainer = new grpc::Method<global::NodeService.DownloadContainerOptions, global::RpcCommon.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadContainer",
        __Marshaller_NodeService_DownloadContainerOptions,
        __Marshaller_rpc_common_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NodeService.String, global::RpcCommon.Empty> __Method_CopyToClipboard = new grpc::Method<global::NodeService.String, global::RpcCommon.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CopyToClipboard",
        __Marshaller_NodeService_String,
        __Marshaller_rpc_common_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NodeService.NodeserviceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NodeService</summary>
    [grpc::BindServiceMethod(typeof(NodeService), "BindService")]
    public abstract partial class NodeServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NodeService.Path> PickObjectPath(global::NodeService.ObjectOptions request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NodeService.Path> GetObjectPath(global::RpcCommon.Hash request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Empty> RevealObjectInExplorer(global::RpcCommon.Hash request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.GuidList> GetAllContainers(global::RpcCommon.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NodeService.Progress> GetDownloadProgress(global::RpcCommon.Hash request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Fs.ObjectList> GetContainerObjects(global::RpcCommon.Guid request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Hash> GetContainerRootHash(global::RpcCommon.Guid request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Guid> ImportObjectFromDisk(global::NodeService.ObjectFromDiskOptions request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Empty> PublishToTracker(global::NodeService.PublishingOptions request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Empty> DownloadContainer(global::NodeService.DownloadContainerOptions request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RpcCommon.Empty> CopyToClipboard(global::NodeService.String request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NodeService</summary>
    public partial class NodeServiceClient : grpc::ClientBase<NodeServiceClient>
    {
      /// <summary>Creates a new client for NodeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NodeServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NodeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NodeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NodeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NodeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Path PickObjectPath(global::NodeService.ObjectOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickObjectPath(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Path PickObjectPath(global::NodeService.ObjectOptions request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PickObjectPath, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Path> PickObjectPathAsync(global::NodeService.ObjectOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickObjectPathAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Path> PickObjectPathAsync(global::NodeService.ObjectOptions request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PickObjectPath, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Path GetObjectPath(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectPath(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Path GetObjectPath(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjectPath, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Path> GetObjectPathAsync(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectPathAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Path> GetObjectPathAsync(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjectPath, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty RevealObjectInExplorer(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevealObjectInExplorer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty RevealObjectInExplorer(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RevealObjectInExplorer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> RevealObjectInExplorerAsync(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevealObjectInExplorerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> RevealObjectInExplorerAsync(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RevealObjectInExplorer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.GuidList GetAllContainers(global::RpcCommon.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllContainers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.GuidList GetAllContainers(global::RpcCommon.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllContainers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.GuidList> GetAllContainersAsync(global::RpcCommon.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllContainersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.GuidList> GetAllContainersAsync(global::RpcCommon.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllContainers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Progress GetDownloadProgress(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDownloadProgress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NodeService.Progress GetDownloadProgress(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDownloadProgress, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Progress> GetDownloadProgressAsync(global::RpcCommon.Hash request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDownloadProgressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NodeService.Progress> GetDownloadProgressAsync(global::RpcCommon.Hash request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDownloadProgress, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Fs.ObjectList GetContainerObjects(global::RpcCommon.Guid request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetContainerObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Fs.ObjectList GetContainerObjects(global::RpcCommon.Guid request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetContainerObjects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Fs.ObjectList> GetContainerObjectsAsync(global::RpcCommon.Guid request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetContainerObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Fs.ObjectList> GetContainerObjectsAsync(global::RpcCommon.Guid request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetContainerObjects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Hash GetContainerRootHash(global::RpcCommon.Guid request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetContainerRootHash(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Hash GetContainerRootHash(global::RpcCommon.Guid request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetContainerRootHash, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Hash> GetContainerRootHashAsync(global::RpcCommon.Guid request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetContainerRootHashAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Hash> GetContainerRootHashAsync(global::RpcCommon.Guid request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetContainerRootHash, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Guid ImportObjectFromDisk(global::NodeService.ObjectFromDiskOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportObjectFromDisk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Guid ImportObjectFromDisk(global::NodeService.ObjectFromDiskOptions request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportObjectFromDisk, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Guid> ImportObjectFromDiskAsync(global::NodeService.ObjectFromDiskOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportObjectFromDiskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Guid> ImportObjectFromDiskAsync(global::NodeService.ObjectFromDiskOptions request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportObjectFromDisk, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty PublishToTracker(global::NodeService.PublishingOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishToTracker(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty PublishToTracker(global::NodeService.PublishingOptions request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PublishToTracker, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> PublishToTrackerAsync(global::NodeService.PublishingOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishToTrackerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> PublishToTrackerAsync(global::NodeService.PublishingOptions request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PublishToTracker, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty DownloadContainer(global::NodeService.DownloadContainerOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadContainer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty DownloadContainer(global::NodeService.DownloadContainerOptions request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadContainer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> DownloadContainerAsync(global::NodeService.DownloadContainerOptions request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadContainerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> DownloadContainerAsync(global::NodeService.DownloadContainerOptions request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadContainer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty CopyToClipboard(global::NodeService.String request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CopyToClipboard(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RpcCommon.Empty CopyToClipboard(global::NodeService.String request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CopyToClipboard, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> CopyToClipboardAsync(global::NodeService.String request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CopyToClipboardAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RpcCommon.Empty> CopyToClipboardAsync(global::NodeService.String request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CopyToClipboard, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NodeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NodeServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NodeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PickObjectPath, serviceImpl.PickObjectPath)
          .AddMethod(__Method_GetObjectPath, serviceImpl.GetObjectPath)
          .AddMethod(__Method_RevealObjectInExplorer, serviceImpl.RevealObjectInExplorer)
          .AddMethod(__Method_GetAllContainers, serviceImpl.GetAllContainers)
          .AddMethod(__Method_GetDownloadProgress, serviceImpl.GetDownloadProgress)
          .AddMethod(__Method_GetContainerObjects, serviceImpl.GetContainerObjects)
          .AddMethod(__Method_GetContainerRootHash, serviceImpl.GetContainerRootHash)
          .AddMethod(__Method_ImportObjectFromDisk, serviceImpl.ImportObjectFromDisk)
          .AddMethod(__Method_PublishToTracker, serviceImpl.PublishToTracker)
          .AddMethod(__Method_DownloadContainer, serviceImpl.DownloadContainer)
          .AddMethod(__Method_CopyToClipboard, serviceImpl.CopyToClipboard).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NodeServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PickObjectPath, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NodeService.ObjectOptions, global::NodeService.Path>(serviceImpl.PickObjectPath));
      serviceBinder.AddMethod(__Method_GetObjectPath, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Hash, global::NodeService.Path>(serviceImpl.GetObjectPath));
      serviceBinder.AddMethod(__Method_RevealObjectInExplorer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Hash, global::RpcCommon.Empty>(serviceImpl.RevealObjectInExplorer));
      serviceBinder.AddMethod(__Method_GetAllContainers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Empty, global::RpcCommon.GuidList>(serviceImpl.GetAllContainers));
      serviceBinder.AddMethod(__Method_GetDownloadProgress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Hash, global::NodeService.Progress>(serviceImpl.GetDownloadProgress));
      serviceBinder.AddMethod(__Method_GetContainerObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Guid, global::Fs.ObjectList>(serviceImpl.GetContainerObjects));
      serviceBinder.AddMethod(__Method_GetContainerRootHash, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RpcCommon.Guid, global::RpcCommon.Hash>(serviceImpl.GetContainerRootHash));
      serviceBinder.AddMethod(__Method_ImportObjectFromDisk, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NodeService.ObjectFromDiskOptions, global::RpcCommon.Guid>(serviceImpl.ImportObjectFromDisk));
      serviceBinder.AddMethod(__Method_PublishToTracker, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NodeService.PublishingOptions, global::RpcCommon.Empty>(serviceImpl.PublishToTracker));
      serviceBinder.AddMethod(__Method_DownloadContainer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NodeService.DownloadContainerOptions, global::RpcCommon.Empty>(serviceImpl.DownloadContainer));
      serviceBinder.AddMethod(__Method_CopyToClipboard, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NodeService.String, global::RpcCommon.Empty>(serviceImpl.CopyToClipboard));
    }

  }
}
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 7.8.0./mMahnq4xyQHtPMxisBsUR8k9Yl0VpZ7BuY+PzHr5ys=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using FlatSharp;
using FlatSharp.Attributes;
using FlatSharp.Internal;
#pragma warning disable 0618
#nullable enable annotations
namespace FlatSharp.Compiler.Generated
{
    internal static class CloneHelpers_e70f26d82c4244748f5305570754cf4e
    {
        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::node.ChunkResponse? Clone(global::node.ChunkResponse? item)
        {
            return item is null ? null : new node.ChunkResponse(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Memory<System.Byte> Clone(global::System.Memory<System.Byte> item)
        {
            return item.ToArray().AsMemory();
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Byte Clone(global::System.Byte item)
        {
            return item;
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::tracker.Empty? Clone(global::tracker.Empty? item)
        {
            return item is null ? null : new tracker.Empty(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::tracker.ObjectWithHash? Clone(global::tracker.ObjectWithHash? item)
        {
            return item is null ? null : new tracker.ObjectWithHash(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.FileSystemObject? Clone(global::fs.FileSystemObject? item)
        {
            return item is null ? null : new fs.FileSystemObject(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.Hash? Clone(global::fs.Hash? item)
        {
            return item is null ? null : new fs.Hash(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.String? Clone(global::System.String? item)
        {
            return item;
        }


        public static global::fs.FileSystemType Clone(global::fs.FileSystemType item)
        {

            byte discriminator = item.Discriminator;
            switch (discriminator)
            {

                case 1:
                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(item.Item1));


                case 2:
                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(item.Item2));


                case 3:
                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(item.Item3));

                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return default(global::fs.FileSystemType);
            }

        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int64 Clone(global::System.Int64 item)
        {
            return item;
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.File? Clone(global::fs.File? item)
        {
            return item is null ? null : new fs.File(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.Directory? Clone(global::fs.Directory? item)
        {
            return item is null ? null : new fs.Directory(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.Link? Clone(global::fs.Link? item)
        {
            return item is null ? null : new fs.Link(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.ChunkHashes? Clone(global::fs.ChunkHashes? item)
        {
            return item is null ? null : new fs.ChunkHashes(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Collections.Generic.IList<fs.Hash>? Clone(global::System.Collections.Generic.IList<fs.Hash>? item)
        {
            return VectorCloneHelpers.Clone<fs.Hash>(item, global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int32 Clone(global::System.Int32 item)
        {
            return item;
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::tracker.PeerRequest? Clone(global::tracker.PeerRequest? item)
        {
            return item is null ? null : new tracker.PeerRequest(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::System.Int16 Clone(global::System.Int16 item)
        {
            return item;
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::tracker.PeerResponse? Clone(global::tracker.PeerResponse? item)
        {
            return item is null ? null : new tracker.PeerResponse(item);
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static global::fs.HashRequest? Clone(global::fs.HashRequest? item)
        {
            return item is null ? null : new fs.HashRequest(item);
        }

    }

}


namespace FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.FileSystemType value)
        {

            byte discriminator = value.Discriminator;
            switch (discriminator)
            {

                case 1:
                    return 7 + global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.GetMaxSize(value.Item1);

                case 2:
                    return 7 + global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.GetMaxSize(value.Item2);

                case 3:
                    return 7 + global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.GetMaxSize(value.Item3);
                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return 0;
            }

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.FileSystemType value,
            ref (int offset0, int offset1) offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            byte discriminatorValue = value.Discriminator;
            spanWriter.WriteByte(
                span,
                discriminatorValue,
                offset.offset0);

            switch (discriminatorValue)
            {

                case 1:
                    {
                        var writeOffset = offset.offset1;
                        global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Serialize(spanWriter, span, value.Item1, writeOffset, context);
                    }
                    break;

                case 2:
                    {
                        var writeOffset = offset.offset1;
                        global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Serialize(spanWriter, span, value.Item2, writeOffset, context);
                    }
                    break;

                case 3:
                    {
                        var writeOffset = offset.offset1;
                        global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Serialize(spanWriter, span, value.Item3, writeOffset, context);
                    }
                    break;
                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminatorValue);
                    break;
            }
        }




        internal static global::fs.FileSystemType Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            ref (int offset0, int offset1) offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {


            byte discriminator = buffer.ReadByte(offset.offset0);
            int offsetLocation = offset.offset1;

            switch (discriminator)
            {

                case 1:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Lazy(buffer, offsetLocation, remainingDepth));


                case 2:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Lazy(buffer, offsetLocation, remainingDepth));


                case 3:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Lazy(buffer, offsetLocation, remainingDepth));

                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return default(global::fs.FileSystemType);
            }

        }



        internal static global::fs.FileSystemType Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            ref (int offset0, int offset1) offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {


            byte discriminator = buffer.ReadByte(offset.offset0);
            int offsetLocation = offset.offset1;

            switch (discriminator)
            {

                case 1:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Progressive(buffer, offsetLocation, remainingDepth));


                case 2:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Progressive(buffer, offsetLocation, remainingDepth));


                case 3:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Progressive(buffer, offsetLocation, remainingDepth));

                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return default(global::fs.FileSystemType);
            }

        }



        internal static global::fs.FileSystemType Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            ref (int offset0, int offset1) offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {


            byte discriminator = buffer.ReadByte(offset.offset0);
            int offsetLocation = offset.offset1;

            switch (discriminator)
            {

                case 1:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Greedy(buffer, offsetLocation, remainingDepth));


                case 2:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Greedy(buffer, offsetLocation, remainingDepth));


                case 3:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Greedy(buffer, offsetLocation, remainingDepth));

                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return default(global::fs.FileSystemType);
            }

        }



        internal static global::fs.FileSystemType Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            ref (int offset0, int offset1) offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {


            byte discriminator = buffer.ReadByte(offset.offset0);
            int offsetLocation = offset.offset1;

            switch (discriminator)
            {

                case 1:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_GreedyMutable(buffer, offsetLocation, remainingDepth));


                case 2:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_GreedyMutable(buffer, offsetLocation, remainingDepth));


                case 3:

                    return new global::fs.FileSystemType(global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_GreedyMutable(buffer, offsetLocation, remainingDepth));

                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<global::fs.FileSystemType>(discriminator);
                    return default(global::fs.FileSystemType);
            }

        }


    }
}




namespace FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.File value)
        {

            int runningSum = 29 + 9;
            var index1Value = value.Hashes;

            if (!(index1Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.GetMaxSize(index1Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.File value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(26, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 8;
            Span<byte> vtable = stackalloc byte[8];

            var index0Value = value.Size;
            var index1Value = value.Hashes;

            var index0Offset = tableStart;
            if (index0Value != default(System.Int64))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                index0Offset = currentOffset;
                currentOffset += 8;


                global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, span, index0Value, index0Offset);


            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

            var index1Offset = tableStart;
            if (!(index1Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index1Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.File.Hashes");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 26 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index1Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Serialize(spanWriter, span, index1Value!, index1Offset, context);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy File")]
        internal sealed class tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Lazy<TInputBuffer>
            : global::fs.File
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.File);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public override System.Int64 Size
#else
            public override System.Int64 Size
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.ChunkHashes Hashes
#else
            public override fs.ChunkHashes Hashes
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int64);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.ChunkHashes ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.File.Hashes");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive File")]
        internal sealed class tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Progressive<TInputBuffer>
            : global::fs.File
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.Int64 __index0Value;
            private fs.ChunkHashes __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index1Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.File);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public override System.Int64 Size
#else
            public override System.Int64 Size
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.ChunkHashes Hashes
#else
            public override fs.ChunkHashes Hashes
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int64);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.ChunkHashes ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.File.Hashes");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy File")]
        internal sealed class tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Greedy<TInputBuffer>
            : global::fs.File
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.Int64 __index0Value;
            private fs.ChunkHashes __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.File);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public override System.Int64 Size
#else
            public override System.Int64 Size
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.ChunkHashes Hashes
#else
            public override fs.ChunkHashes Hashes
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int64);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.ChunkHashes ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.File.Hashes");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable File")]
        internal sealed class tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_GreedyMutable<TInputBuffer>
            : global::fs.File
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.Int64 __index0Value;
            private fs.ChunkHashes __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_f40d301abdd7406ebae9e9a5e8ca2ef6_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.File);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public override System.Int64 Size
#else
            public override System.Int64 Size
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.ChunkHashes Hashes
#else
            public override fs.ChunkHashes Hashes
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int64);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.ChunkHashes ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.File.Hashes");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_ef6b8122e3d74ec68ccf43c20ebd4316
        {

            public static readonly TableFieldContext Size = new TableFieldContext(
                "fs.File.Size",
                false,
                false);

            public static readonly TableFieldContext Hashes = new TableFieldContext(
                "fs.File.Hashes",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7
{
    internal class Serializer : IGeneratedSerializer<global::fs.File>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.File root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.File root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.File ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.File ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.File ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.File ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.Directory value)
        {

            int runningSum = 14 + 7;
            var index0Value = value.Entries;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.Directory value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(11, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[6];

            var index0Value = value.Entries;

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.Directory.Entries");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 11 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.tableReader_07715206c7a1426c98462dcf71ecef45_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_07715206c7a1426c98462dcf71ecef45_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy Directory")]
        internal sealed class tableReader_07715206c7a1426c98462dcf71ecef45_Lazy<TInputBuffer>
            : global::fs.Directory
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_07715206c7a1426c98462dcf71ecef45_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Directory);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.Collections.Generic.IList<fs.Hash> Entries
#else
            public override System.Collections.Generic.IList<fs.Hash> Entries
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Collections.Generic.IList<fs.Hash> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Directory.Entries");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth, tableMetadata_0f49cd8bb6554508b7360626d19c4742.Entries);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.tableReader_07715206c7a1426c98462dcf71ecef45_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_07715206c7a1426c98462dcf71ecef45_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive Directory")]
        internal sealed class tableReader_07715206c7a1426c98462dcf71ecef45_Progressive<TInputBuffer>
            : global::fs.Directory
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.Collections.Generic.IList<fs.Hash> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_07715206c7a1426c98462dcf71ecef45_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Directory);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.Collections.Generic.IList<fs.Hash> Entries
#else
            public override System.Collections.Generic.IList<fs.Hash> Entries
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Collections.Generic.IList<fs.Hash> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Directory.Entries");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth, tableMetadata_0f49cd8bb6554508b7360626d19c4742.Entries);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.tableReader_07715206c7a1426c98462dcf71ecef45_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_07715206c7a1426c98462dcf71ecef45_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy Directory")]
        internal sealed class tableReader_07715206c7a1426c98462dcf71ecef45_Greedy<TInputBuffer>
            : global::fs.Directory
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.Collections.Generic.IList<fs.Hash> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_07715206c7a1426c98462dcf71ecef45_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Directory);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.Collections.Generic.IList<fs.Hash> Entries
#else
            public override System.Collections.Generic.IList<fs.Hash> Entries
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Collections.Generic.IList<fs.Hash> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Directory.Entries");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth, tableMetadata_0f49cd8bb6554508b7360626d19c4742.Entries);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.tableReader_07715206c7a1426c98462dcf71ecef45_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_07715206c7a1426c98462dcf71ecef45_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable Directory")]
        internal sealed class tableReader_07715206c7a1426c98462dcf71ecef45_GreedyMutable<TInputBuffer>
            : global::fs.Directory
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.Collections.Generic.IList<fs.Hash> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_07715206c7a1426c98462dcf71ecef45_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Directory);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.Collections.Generic.IList<fs.Hash> Entries
#else
            public override System.Collections.Generic.IList<fs.Hash> Entries
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Collections.Generic.IList<fs.Hash> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Directory.Entries");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth, tableMetadata_0f49cd8bb6554508b7360626d19c4742.Entries);
            }
        }


        private static class tableMetadata_0f49cd8bb6554508b7360626d19c4742
        {

            public static readonly TableFieldContext Entries = new TableFieldContext(
                "fs.Directory.Entries",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033
{
    internal class Serializer : IGeneratedSerializer<global::fs.Directory>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.Directory root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.Directory root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.Directory ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Directory ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Directory ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Directory ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.Link value)
        {

            int runningSum = 14 + 7;
            var index0Value = value.TargetPath;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.Link value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(11, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[6];

            var index0Value = value.TargetPath;

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.Link.TargetPath");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 11 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_2293cd70159246d7bcad0405fe2087f0.TargetPath);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.tableReader_49659bd775dc4f92846d2308fff29b86_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_49659bd775dc4f92846d2308fff29b86_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy Link")]
        internal sealed class tableReader_49659bd775dc4f92846d2308fff29b86_Lazy<TInputBuffer>
            : global::fs.Link
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_49659bd775dc4f92846d2308fff29b86_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Link);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String TargetPath
#else
            public override System.String TargetPath
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Link.TargetPath");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.tableReader_49659bd775dc4f92846d2308fff29b86_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_49659bd775dc4f92846d2308fff29b86_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive Link")]
        internal sealed class tableReader_49659bd775dc4f92846d2308fff29b86_Progressive<TInputBuffer>
            : global::fs.Link
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_49659bd775dc4f92846d2308fff29b86_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Link);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String TargetPath
#else
            public override System.String TargetPath
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Link.TargetPath");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.tableReader_49659bd775dc4f92846d2308fff29b86_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_49659bd775dc4f92846d2308fff29b86_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy Link")]
        internal sealed class tableReader_49659bd775dc4f92846d2308fff29b86_Greedy<TInputBuffer>
            : global::fs.Link
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_49659bd775dc4f92846d2308fff29b86_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Link);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String TargetPath
#else
            public override System.String TargetPath
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Link.TargetPath");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.tableReader_49659bd775dc4f92846d2308fff29b86_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_49659bd775dc4f92846d2308fff29b86_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable Link")]
        internal sealed class tableReader_49659bd775dc4f92846d2308fff29b86_GreedyMutable<TInputBuffer>
            : global::fs.Link
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_49659bd775dc4f92846d2308fff29b86_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Link);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String TargetPath
#else
            public override System.String TargetPath
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.Link.TargetPath");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_2293cd70159246d7bcad0405fe2087f0
        {

            public static readonly TableFieldContext TargetPath = new TableFieldContext(
                "fs.Link.TargetPath",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B
{
    internal class Serializer : IGeneratedSerializer<global::fs.Link>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.Link root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.Link root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.Link ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Link ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Link ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.Link ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.NC274CD218E9DE0B3BDF675849D0907EA99BEB976F56808C38D86E7FB2E35311B
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int GetMaxSize(global::System.Byte value)
        {
            return 1;
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Byte value,
            int offset

            ) where TSpanWriter : ISpanWriter
        {
            spanWriter.WriteByte(span, value, offset);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static byte Parse<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadByte(offset);
        }


    }
}




namespace FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int GetMaxSize(global::System.Int64 value)
        {
            return 15;
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Int64 value,
            int offset

            ) where TSpanWriter : ISpanWriter
        {
            spanWriter.WriteLong(span, value, offset);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static long Parse<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadLong(offset);
        }


    }
}




namespace FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.ChunkHashes value)
        {

            int runningSum = 85 + 9;

            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.ChunkHashes value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(82, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 8;
            Span<byte> vtable = stackalloc byte[8];

            var index0Value = value.ChunkSize;
            var index1Value = value.Hash;

            var index1Offset = tableStart;
            if (!(index1Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                index1Offset = currentOffset;
                currentOffset += 64;


                global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, index1Value!, index1Offset);


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.ChunkHashes.Hash");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

            var index0Offset = tableStart;
            if (index0Value != default(System.Int32))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


                global::FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB.Helpers.Serialize(spanWriter, span, index0Value, index0Offset);


            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 82 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.tableReader_19433795bcd941cea4c286fc85b41950_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_19433795bcd941cea4c286fc85b41950_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy ChunkHashes")]
        internal sealed class tableReader_19433795bcd941cea4c286fc85b41950_Lazy<TInputBuffer>
            : global::fs.ChunkHashes
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_19433795bcd941cea4c286fc85b41950_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.ChunkHashes);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public override System.Int32 ChunkSize
#else
            public override System.Int32 ChunkSize
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int32);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.ChunkHashes.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.tableReader_19433795bcd941cea4c286fc85b41950_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_19433795bcd941cea4c286fc85b41950_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive ChunkHashes")]
        internal sealed class tableReader_19433795bcd941cea4c286fc85b41950_Progressive<TInputBuffer>
            : global::fs.ChunkHashes
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.Int32 __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_19433795bcd941cea4c286fc85b41950_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index1Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.ChunkHashes);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public override System.Int32 ChunkSize
#else
            public override System.Int32 ChunkSize
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int32);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.ChunkHashes.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.tableReader_19433795bcd941cea4c286fc85b41950_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_19433795bcd941cea4c286fc85b41950_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy ChunkHashes")]
        internal sealed class tableReader_19433795bcd941cea4c286fc85b41950_Greedy<TInputBuffer>
            : global::fs.ChunkHashes
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.Int32 __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_19433795bcd941cea4c286fc85b41950_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.ChunkHashes);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public override System.Int32 ChunkSize
#else
            public override System.Int32 ChunkSize
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int32);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.ChunkHashes.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.tableReader_19433795bcd941cea4c286fc85b41950_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_19433795bcd941cea4c286fc85b41950_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable ChunkHashes")]
        internal sealed class tableReader_19433795bcd941cea4c286fc85b41950_GreedyMutable<TInputBuffer>
            : global::fs.ChunkHashes
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.Int32 __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_19433795bcd941cea4c286fc85b41950_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.ChunkHashes);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public override System.Int32 ChunkSize
#else
            public override System.Int32 ChunkSize
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int32);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.ChunkHashes.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_5c73bb7ac32a48769b59d1bbe4c7f54e
        {

            public static readonly TableFieldContext ChunkSize = new TableFieldContext(
                "fs.ChunkHashes.ChunkSize",
                false,
                false);

            public static readonly TableFieldContext Hash = new TableFieldContext(
                "fs.ChunkHashes.Hash",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5
{
    internal class Serializer : IGeneratedSerializer<global::fs.ChunkHashes>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.ChunkHashes root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.ChunkHashes root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.ChunkHashes ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.ChunkHashes ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.ChunkHashes ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.ChunkHashes ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N768CB2D2EB2FFC1DE75A7D04FB8747FDCD699CDBAD9DC0F31B66C8EF27C169C9
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System.Collections.Generic;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::System.Collections.Generic.IList<fs.Hash> value)
        {
            return 14 + (checked(64 * value.Count));
        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Collections.Generic.IList<fs.Hash> value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int count = value.Count;
            int vectorOffset = context.AllocateVector(8, count, 64);
            spanWriter.WriteUOffset(span, offset, vectorOffset);
            spanWriter.WriteInt(span, count, vectorOffset);
            vectorOffset += sizeof(int);


            if (value is global::fs.Hash[] array)
            {

                int i;
                for (i = 0; i < array.Length; i = unchecked(i + 1))
                {
                    var current = array[i];

                    SerializationHelpers.EnsureNonNull(current);
                    global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, current, vectorOffset);
                    vectorOffset += 64;
                }
            }
            else if (value is List<global::fs.Hash> realList)
            {

                int i;
                for (i = 0; i < realList.Count; i = unchecked(i + 1))
                {
                    var current = realList[i];

                    SerializationHelpers.EnsureNonNull(current);
                    global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, current, vectorOffset);
                    vectorOffset += 64;
                }
            }
            else
            {

                int i;
                for (i = 0; i < count; i = unchecked(i + 1))
                {
                    var current = value[i];

                    SerializationHelpers.EnsureNonNull(current);
                    global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, current, vectorOffset);
                    vectorOffset += 64;
                }
            }
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static global::System.Collections.Generic.IList<fs.Hash> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return new GeneratedVector_00cedaecae21ac96576d2077ab783156_Lazy<TInputBuffer>(
                buffer,
                offset + buffer.ReadUOffset(offset),
                remainingDepth,
                fieldContext);
        }
        [System.Diagnostics.DebuggerDisplay("Lazy [ Hash ], Count = {Count}")]
        internal sealed class GeneratedVector_00cedaecae21ac96576d2077ab783156_Lazy<TInputBuffer>
            : object
            , IList<global::fs.Hash>
            , IReadOnlyList<global::fs.Hash>
            , IFlatBufferDeserializedVector
            where TInputBuffer : IInputBuffer
        {
            private readonly int offset;
            private readonly int count;
            private readonly TInputBuffer buffer;
            private readonly TableFieldContext fieldContext;
            private readonly short remainingDepth;

            public GeneratedVector_00cedaecae21ac96576d2077ab783156_Lazy(
                TInputBuffer memory,
                int offset,
                short remainingDepth,
                TableFieldContext fieldContext)
            {
                this.count = (int)memory.ReadUInt(offset);
                this.offset = offset + sizeof(uint);
                this.buffer = memory;
                this.fieldContext = fieldContext;
                this.remainingDepth = remainingDepth;
            }

            public global::fs.Hash this[int index]
            {
                get => this.SafeParseItem(index);
                set
                {
                    VectorUtilities.CheckIndex(index, this.count);
                    this.UnsafeWriteThrough(index, value);
                }
            }

            public int Count => this.count;

            public FlatBufferDeserializationOption DeserializationOption => FlatBufferDeserializationOption.Lazy;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy<TInputBuffer> SafeParseItem(int index)
            {
                VectorUtilities.CheckIndex(index, this.count);
                return this.UnsafeParseItem(index);
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy<TInputBuffer> UnsafeParseItem(int index)
            {
                int offset = this.offset + (checked(index << 6));
                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Lazy(buffer, offset, remainingDepth);
            }


            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private void UnsafeWriteThrough(int index, global::fs.Hash value)
            {
                global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            }
            public bool Contains(global::fs.Hash? item)
        => global::FlatSharp.Internal.VectorsCommon.Contains(this, item);

            public int IndexOf(global::fs.Hash? item)
                => global::FlatSharp.Internal.VectorsCommon.IndexOf(this, item);

            public void CopyTo(global::fs.Hash[]? array, int arrayIndex)
                => global::FlatSharp.Internal.VectorsCommon.CopyTo(this, array, arrayIndex);

            public IEnumerator<global::fs.Hash> GetEnumerator()
                => global::FlatSharp.Internal.VectorsCommon.GetEnumerator(this);

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() => this.GetEnumerator();
            public bool IsReadOnly => true;

            public void Add(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Clear() => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Insert(int index, global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void RemoveAt(int index) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public bool Remove(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            IInputBuffer IFlatBufferDeserializedVector.InputBuffer => this.buffer;

            int IFlatBufferDeserializedVector.ItemSize => 64;

            int IFlatBufferDeserializedVector.OffsetBase => this.offset;

            object IFlatBufferDeserializedVector.ItemAt(int index) => this.SafeParseItem(index)!;

            int IFlatBufferDeserializedVector.OffsetOf(int index)
            {
                VectorUtilities.CheckIndex(index, this.Count);
                return this.offset + (checked(index << 6));
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static global::System.Collections.Generic.IList<fs.Hash> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return new GeneratedVector_00cedaecae21ac96576d2077ab783156_Progressive<TInputBuffer>(
                buffer,
                offset + buffer.ReadUOffset(offset),
                remainingDepth,
                fieldContext);
        }
        [System.Diagnostics.DebuggerDisplay("Progressive [ Hash ], Count = {Count}")]
        internal sealed class GeneratedVector_00cedaecae21ac96576d2077ab783156_Progressive<TInputBuffer>
            : object
            , IList<global::fs.Hash>
            , IReadOnlyList<global::fs.Hash>
            , IFlatBufferDeserializedVector
            where TInputBuffer : IInputBuffer
        {
            private const uint ChunkSize = 32;

            private readonly int offset;
            private readonly int count;
            private readonly TInputBuffer buffer;
            private readonly TableFieldContext fieldContext;
            private readonly short remainingDepth;
            private readonly FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[]?[] items;

            public GeneratedVector_00cedaecae21ac96576d2077ab783156_Progressive(
                TInputBuffer memory,
                int offset,
                short remainingDepth,
                TableFieldContext fieldContext)
            {
                int count = (int)memory.ReadUInt(offset);
                this.count = count;
                this.offset = offset + sizeof(uint);
                this.buffer = memory;
                this.fieldContext = fieldContext;
                this.remainingDepth = remainingDepth;


                int progressiveMinLength = (int)(count / ChunkSize) + 1;
                this.items = new FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[]?[progressiveMinLength];
            }

            public global::fs.Hash this[int index]
            {
                get => this.ProgressiveGet(index);
                set => this.ProgressiveSet(index, value);
            }

            public int Count => this.count;

            public FlatBufferDeserializationOption DeserializationOption => FlatBufferDeserializationOption.Progressive;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private static void GetAddress(uint index, out uint rowIndex, out uint colIndex)
            {
                rowIndex = index / ChunkSize;
                colIndex = index % ChunkSize;
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[] GetOrCreateRow(FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[]?[] items, uint rowIndex)
            {
                return items[rowIndex] ?? this.CreateRow(items, rowIndex);
            }

            [MethodImpl(MethodImplOptions.NoInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[] CreateRow(FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[]?[] items, uint rowIndex)
            {
                var row = new FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>?[(int)ChunkSize];
                items[rowIndex] = row;



                return row;
            }

            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer> ProgressiveGet(int index)
            {
                VectorUtilities.CheckIndex(index, this.count);

                uint uindex = unchecked((uint)index);
                GetAddress(uindex, out uint rowIndex, out uint colIndex);

                var items = this.items;
                var row = this.GetOrCreateRow(items, rowIndex);
                var item = row[colIndex];

                if (item is null)
                {
                    item = this.UnsafeParseItem(index);
                    row[colIndex] = item;
                }

                return item!;
            }

            private void ProgressiveSet(int index, global::fs.Hash value) => this.InlineProgressiveSet(index, value);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private void InlineProgressiveSet(int index, global::fs.Hash value)
            {
                VectorUtilities.CheckIndex(index, this.count);

                this.UnsafeWriteThrough(index, value);
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer> UnsafeParseItem(int index)
            {
                int offset = this.offset + (checked(index << 6));
                return UnsafeParseFromOffset(offset);
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer> UnsafeParseFromOffset(int offset)
            {
                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Progressive(buffer, offset, remainingDepth);
            }


            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private void UnsafeWriteThrough(int index, global::fs.Hash value)
            {
                global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            }
            public bool Contains(global::fs.Hash? item)
        => global::FlatSharp.Internal.VectorsCommon.Contains(this, item);

            public int IndexOf(global::fs.Hash? item)
                => global::FlatSharp.Internal.VectorsCommon.IndexOf(this, item);

            public void CopyTo(global::fs.Hash[]? array, int arrayIndex)
                => global::FlatSharp.Internal.VectorsCommon.CopyTo(this, array, arrayIndex);

            public IEnumerator<global::fs.Hash> GetEnumerator()
                => global::FlatSharp.Internal.VectorsCommon.GetEnumerator(this);

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() => this.GetEnumerator();
            public bool IsReadOnly => true;

            public void Add(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Clear() => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Insert(int index, global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void RemoveAt(int index) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public bool Remove(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            IInputBuffer IFlatBufferDeserializedVector.InputBuffer => this.buffer;

            int IFlatBufferDeserializedVector.ItemSize => 64;

            int IFlatBufferDeserializedVector.OffsetBase => this.offset;

            object IFlatBufferDeserializedVector.ItemAt(int index) => this.ProgressiveGet(index)!;

            int IFlatBufferDeserializedVector.OffsetOf(int index)
            {
                VectorUtilities.CheckIndex(index, this.Count);
                return this.offset + (checked(index << 6));
            }
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static global::System.Collections.Generic.IList<fs.Hash> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return new GeneratedVector_00cedaecae21ac96576d2077ab783156_Greedy<TInputBuffer>(
                buffer,
                offset + buffer.ReadUOffset(offset),
                remainingDepth,
                fieldContext);
        }
        [System.Diagnostics.DebuggerDisplay("Greedy [ Hash ], Count = {Count}")]
        internal sealed class GeneratedVector_00cedaecae21ac96576d2077ab783156_Greedy<TInputBuffer>
            : object
            , IList<global::fs.Hash>
            , IReadOnlyList<global::fs.Hash>
            where TInputBuffer : IInputBuffer
        {
            private readonly List<FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer>> list;

            public GeneratedVector_00cedaecae21ac96576d2077ab783156_Greedy(
                TInputBuffer buffer,
                int offset,
                short remainingDepth,
                TableFieldContext fieldContext)
            {
                int count = (int)buffer.ReadUInt(offset);
                offset += sizeof(int);

                var list = new List<FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer>>(count);
                this.list = list;

                for (int i = 0; i < count; ++i)
                {
                    var item = global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Greedy(buffer, offset, remainingDepth);
                    list.Add(item);
                    offset += 64;
                }
            }

            public global::fs.Hash this[int index]
            {
                get => this.GetItem(index);
                set => this.SetItem(index, value);
            }

            public int Count => this.list.Count;

            public FlatBufferDeserializationOption DeserializationOption => FlatBufferDeserializationOption.Greedy;

            private FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer> GetItem(int index) => this.list[index];
            private void SetItem(int index, global::fs.Hash value) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();

            public bool Contains(global::fs.Hash? item)
        => global::FlatSharp.Internal.VectorsCommon.Contains(this, item);

            public int IndexOf(global::fs.Hash? item)
                => global::FlatSharp.Internal.VectorsCommon.IndexOf(this, item);

            public void CopyTo(global::fs.Hash[]? array, int arrayIndex)
                => global::FlatSharp.Internal.VectorsCommon.CopyTo(this, array, arrayIndex);

            public IEnumerator<global::fs.Hash> GetEnumerator()
                => global::FlatSharp.Internal.VectorsCommon.GetEnumerator(this);

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() => this.GetEnumerator();
            public bool IsReadOnly => true;

            public void Add(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Clear() => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void Insert(int index, global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public void RemoveAt(int index) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
            public bool Remove(global::fs.Hash item) => global::FlatSharp.Internal.FSThrow.NotMutable_DeserializedVector();
        }

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static global::System.Collections.Generic.IList<fs.Hash> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return new GeneratedVector_00cedaecae21ac96576d2077ab783156_GreedyMutable<TInputBuffer>(
                buffer,
                offset + buffer.ReadUOffset(offset),
                remainingDepth,
                fieldContext);
        }
        [System.Diagnostics.DebuggerDisplay("GreedyMutable [ Hash ], Count = {Count}")]
        internal sealed class GeneratedVector_00cedaecae21ac96576d2077ab783156_GreedyMutable<TInputBuffer>
            : object
            , IList<global::fs.Hash>
            , IReadOnlyList<global::fs.Hash>
            where TInputBuffer : IInputBuffer
        {
            private readonly TableFieldContext fieldContext;
            private readonly List<global::fs.Hash> list;

            public GeneratedVector_00cedaecae21ac96576d2077ab783156_GreedyMutable(
                TInputBuffer buffer,
                int offset,
                short remainingDepth,
                TableFieldContext fieldContext)
            {
                int count = (int)buffer.ReadUInt(offset);
                offset += sizeof(int);

                this.fieldContext = fieldContext;

                var list = new List<global::fs.Hash>();
                this.list = list;

                for (int i = 0; i < count; ++i)
                {
                    var item = global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_GreedyMutable(buffer, offset, remainingDepth);
                    list.Add(item);
                    offset += 64;
                }
            }

            public global::fs.Hash this[int index]
            {
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                get => this.GetItem(index);

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                set => this.SetItem(index, value);
            }

            public int Count => this.list.Count;

            public bool IsReadOnly => false;

            public FlatBufferDeserializationOption DeserializationOption => FlatBufferDeserializationOption.GreedyMutable;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private global::fs.Hash GetItem(int index) => this.list[index];

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private void SetItem(int index, global::fs.Hash value)
            {
                this.list[index] = value;
            }

            public void Add(global::fs.Hash item)
            {
                this.list.Add(item);
            }

            public void Clear()
            {
                this.list.Clear();
            }

            public void Insert(int index, global::fs.Hash item)
            {
                this.list.Insert(index, item);
            }

            public void RemoveAt(int index)
            {
                this.list.RemoveAt(index);
            }

            public bool Remove(global::fs.Hash item)
            {
                return this.list.Remove(item);
            }

            public bool Contains(global::fs.Hash? item)
        => global::FlatSharp.Internal.VectorsCommon.Contains(this, item);

            public int IndexOf(global::fs.Hash? item)
                => global::FlatSharp.Internal.VectorsCommon.IndexOf(this, item);

            public void CopyTo(global::fs.Hash[]? array, int arrayIndex)
                => global::FlatSharp.Internal.VectorsCommon.CopyTo(this, array, arrayIndex);

            public IEnumerator<global::fs.Hash> GetEnumerator()
                => global::FlatSharp.Internal.VectorsCommon.GetEnumerator(this);

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() => this.GetEnumerator();
        }

    }
}




namespace FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::System.String value)
        {
            return SerializationHelpers.GetMaxSize(value);
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.String value,
            int offset
            , SerializationContext context
            , TableFieldContext fieldContext) where TSpanWriter : ISpanWriter
        {

            spanWriter.WriteString(
                span,
                value,
                offset,
                context);

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static string Parse<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadString(offset);
        }


    }
}




namespace FlatSharp.Compiler.Generated.N1E4AF840DA947508D3AF090D2CC25201F558B3154B0351D91A6670A9ABEA40CB
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int GetMaxSize(global::System.Int32 value)
        {
            return 7;
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Int32 value,
            int offset

            ) where TSpanWriter : ISpanWriter
        {
            spanWriter.WriteInt(span, value, offset);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int Parse<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadInt(offset);
        }


    }
}




namespace FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int GetMaxSize(global::fs.Hash value)
        {
            return 71;
        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.Hash value,
            int offset

            ) where TSpanWriter : ISpanWriter
        {
            Span<byte> scopedSpan = span.Slice(offset, 64);

            if (value is null)
            {
                scopedSpan.Clear();
                return;
            }

            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[0], 0);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[1], 8);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[2], 16);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[3], 24);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[4], 32);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[5], 40);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[6], 48);
            global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Serialize(spanWriter, scopedSpan, value.Data[7], 56);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy<TInputBuffer>(buffer, offset, remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy Hash")]
        internal sealed class structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy<TInputBuffer>
            : global::fs.Hash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public structReader_1f053c9fdd05457c87acf8b20bfd9e03_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Hash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_0
#else
            protected override System.Int64 __flatsharp__Data_0
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_1
#else
            protected override System.Int64 __flatsharp__Data_1
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_2
#else
            protected override System.Int64 __flatsharp__Data_2
#endif
            {
                get
                {
                    return ReadIndex2Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_3
#else
            protected override System.Int64 __flatsharp__Data_3
#endif
            {
                get
                {
                    return ReadIndex3Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_4
#else
            protected override System.Int64 __flatsharp__Data_4
#endif
            {
                get
                {
                    return ReadIndex4Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_5
#else
            protected override System.Int64 __flatsharp__Data_5
#endif
            {
                get
                {
                    return ReadIndex5Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_6
#else
            protected override System.Int64 __flatsharp__Data_6
#endif
            {
                get
                {
                    return ReadIndex6Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_7
#else
            protected override System.Int64 __flatsharp__Data_7
#endif
            {
                get
                {
                    return ReadIndex7Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 8, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex2Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 16, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex3Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 24, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex4Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 32, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex5Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 40, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex6Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 48, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex7Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 56, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>(buffer, offset, remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive Hash")]
        internal sealed class structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive<TInputBuffer>
            : global::fs.Hash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private byte __mask0;
            private System.Int64 __index0Value;
            private System.Int64 __index1Value;
            private System.Int64 __index2Value;
            private System.Int64 __index3Value;
            private System.Int64 __index4Value;
            private System.Int64 __index5Value;
            private System.Int64 __index6Value;
            private System.Int64 __index7Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public structReader_1f053c9fdd05457c87acf8b20bfd9e03_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Hash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_0
#else
            protected override System.Int64 __flatsharp__Data_0
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_1
#else
            protected override System.Int64 __flatsharp__Data_1
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_2
#else
            protected override System.Int64 __flatsharp__Data_2
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)4) == 0)
                    {
                        this.__index2Value = ReadIndex2Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)4);
                    }
                    return this.__index2Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_3
#else
            protected override System.Int64 __flatsharp__Data_3
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)8) == 0)
                    {
                        this.__index3Value = ReadIndex3Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)8);
                    }
                    return this.__index3Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_4
#else
            protected override System.Int64 __flatsharp__Data_4
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)16) == 0)
                    {
                        this.__index4Value = ReadIndex4Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)16);
                    }
                    return this.__index4Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_5
#else
            protected override System.Int64 __flatsharp__Data_5
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)32) == 0)
                    {
                        this.__index5Value = ReadIndex5Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)32);
                    }
                    return this.__index5Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_6
#else
            protected override System.Int64 __flatsharp__Data_6
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)64) == 0)
                    {
                        this.__index6Value = ReadIndex6Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)64);
                    }
                    return this.__index6Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_7
#else
            protected override System.Int64 __flatsharp__Data_7
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)128) == 0)
                    {
                        this.__index7Value = ReadIndex7Value(this.__buffer, this.__offset, default, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)128);
                    }
                    return this.__index7Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 8, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex2Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 16, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex3Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 24, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex4Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 32, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex5Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 40, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex6Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 48, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex7Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 56, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer>(buffer, offset, remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy Hash")]
        internal sealed class structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy<TInputBuffer>
            : global::fs.Hash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.Int64 __index0Value;
            private System.Int64 __index1Value;
            private System.Int64 __index2Value;
            private System.Int64 __index3Value;
            private System.Int64 __index4Value;
            private System.Int64 __index5Value;
            private System.Int64 __index6Value;
            private System.Int64 __index7Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public structReader_1f053c9fdd05457c87acf8b20bfd9e03_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__index0Value = ReadIndex0Value(buffer, offset, default, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, default, remainingDepth);
                this.__index2Value = ReadIndex2Value(buffer, offset, default, remainingDepth);
                this.__index3Value = ReadIndex3Value(buffer, offset, default, remainingDepth);
                this.__index4Value = ReadIndex4Value(buffer, offset, default, remainingDepth);
                this.__index5Value = ReadIndex5Value(buffer, offset, default, remainingDepth);
                this.__index6Value = ReadIndex6Value(buffer, offset, default, remainingDepth);
                this.__index7Value = ReadIndex7Value(buffer, offset, default, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Hash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_0
#else
            protected override System.Int64 __flatsharp__Data_0
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_1
#else
            protected override System.Int64 __flatsharp__Data_1
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_2
#else
            protected override System.Int64 __flatsharp__Data_2
#endif
            {
                get
                {
                    return this.__index2Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_3
#else
            protected override System.Int64 __flatsharp__Data_3
#endif
            {
                get
                {
                    return this.__index3Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_4
#else
            protected override System.Int64 __flatsharp__Data_4
#endif
            {
                get
                {
                    return this.__index4Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_5
#else
            protected override System.Int64 __flatsharp__Data_5
#endif
            {
                get
                {
                    return this.__index5Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_6
#else
            protected override System.Int64 __flatsharp__Data_6
#endif
            {
                get
                {
                    return this.__index6Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_7
#else
            protected override System.Int64 __flatsharp__Data_7
#endif
            {
                get
                {
                    return this.__index7Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 8, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex2Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 16, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex3Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 24, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex4Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 32, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex5Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 40, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex6Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 48, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex7Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 56, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.structReader_1f053c9fdd05457c87acf8b20bfd9e03_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new structReader_1f053c9fdd05457c87acf8b20bfd9e03_GreedyMutable<TInputBuffer>(buffer, offset, remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable Hash")]
        internal sealed class structReader_1f053c9fdd05457c87acf8b20bfd9e03_GreedyMutable<TInputBuffer>
            : global::fs.Hash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.Int64 __index0Value;
            private System.Int64 __index1Value;
            private System.Int64 __index2Value;
            private System.Int64 __index3Value;
            private System.Int64 __index4Value;
            private System.Int64 __index5Value;
            private System.Int64 __index6Value;
            private System.Int64 __index7Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public structReader_1f053c9fdd05457c87acf8b20bfd9e03_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__index0Value = ReadIndex0Value(buffer, offset, default, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, default, remainingDepth);
                this.__index2Value = ReadIndex2Value(buffer, offset, default, remainingDepth);
                this.__index3Value = ReadIndex3Value(buffer, offset, default, remainingDepth);
                this.__index4Value = ReadIndex4Value(buffer, offset, default, remainingDepth);
                this.__index5Value = ReadIndex5Value(buffer, offset, default, remainingDepth);
                this.__index6Value = ReadIndex6Value(buffer, offset, default, remainingDepth);
                this.__index7Value = ReadIndex7Value(buffer, offset, default, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.Hash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_0
#else
            protected override System.Int64 __flatsharp__Data_0
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_1
#else
            protected override System.Int64 __flatsharp__Data_1
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_2
#else
            protected override System.Int64 __flatsharp__Data_2
#endif
            {
                get
                {
                    return this.__index2Value;
                }

                set
                {
                    this.__index2Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_3
#else
            protected override System.Int64 __flatsharp__Data_3
#endif
            {
                get
                {
                    return this.__index3Value;
                }

                set
                {
                    this.__index3Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_4
#else
            protected override System.Int64 __flatsharp__Data_4
#endif
            {
                get
                {
                    return this.__index4Value;
                }

                set
                {
                    this.__index4Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_5
#else
            protected override System.Int64 __flatsharp__Data_5
#endif
            {
                get
                {
                    return this.__index5Value;
                }

                set
                {
                    this.__index5Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_6
#else
            protected override System.Int64 __flatsharp__Data_6
#endif
            {
                get
                {
                    return this.__index6Value;
                }

                set
                {
                    this.__index6Value = value;
                }
            }

#if NET7_0_OR_GREATER
            protected override System.Int64 __flatsharp__Data_7
#else
            protected override System.Int64 __flatsharp__Data_7
#endif
            {
                get
                {
                    return this.__index7Value;
                }

                set
                {
                    this.__index7Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 8, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex2Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 16, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex3Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 24, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex4Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 32, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex5Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 40, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex6Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 48, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 ReadIndex7Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {
                return global::FlatSharp.Compiler.Generated.N58830D9707848C98BDACB1247AB8415FB9A6809E3518960277DFB64757D9A05C.Helpers.Parse(buffer, offset + 56, remainingDepth);
            }
        }


    }
}




namespace FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.FileSystemObject value)
        {

            int runningSum = 22 + 11;
            var index0Value = value.Name;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.GetMaxSize(index0Value);
            }
            var index1Value = value.Type;


            {
                runningSum += global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.GetMaxSize(index1Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.FileSystemObject value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(19, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 8;
            Span<byte> vtable = stackalloc byte[10];

            var index0Value = value.Name;
            var index1Value = value.Type;

            var index2Offset = tableStart;

            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index2Offset = currentOffset;
                currentOffset += 4;

                vtableLength = 10;
            }

            spanWriter.WriteUShort(vtable, (ushort)(index2Offset - tableStart), 8);

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.FileSystemObject.Name");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

            var index1Offset = tableStart;

            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                index1Offset = currentOffset;
                currentOffset += 1;


            }

            spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 19 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_235c49822392442cbe0d40007d874e6d.Name);

            }


            if (index1Offset != tableStart)
            {

                var offsetTuple = (index1Offset, index2Offset);
                global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.Serialize(spanWriter, span, index1Value, ref offsetTuple, context);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.tableReader_ec725e253b97414e8b3f24761e9c9437_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_ec725e253b97414e8b3f24761e9c9437_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy FileSystemObject")]
        internal sealed class tableReader_ec725e253b97414e8b3f24761e9c9437_Lazy<TInputBuffer>
            : global::fs.FileSystemObject
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_ec725e253b97414e8b3f24761e9c9437_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.FileSystemObject);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String Name
#else
            public override System.String Name
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.FileSystemType Type
#else
            public override fs.FileSystemType Type
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Name");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemType ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {

                bool allZero = true;
                bool anyZero = false;


                int relativeOffset0 = vtable.OffsetOf<TInputBuffer>(buffer, 1);
                bool isZero0 = relativeOffset0 == 0;
                allZero &= isZero0;


                anyZero |= isZero0;


                int relativeOffset1 = vtable.OffsetOf<TInputBuffer>(buffer, 2);
                bool isZero1 = relativeOffset1 == 0;
                allZero &= isZero1;


                anyZero |= isZero1;


                if (allZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Type");
                }

                if (anyZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_UnionOnlyPartiallyPresent("fs.FileSystemObject.Type");
                }

                var absoluteLocations = (relativeOffset0 + offset, relativeOffset1 + offset);
                return global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.Parse_Lazy(buffer, ref absoluteLocations, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.tableReader_ec725e253b97414e8b3f24761e9c9437_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_ec725e253b97414e8b3f24761e9c9437_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive FileSystemObject")]
        internal sealed class tableReader_ec725e253b97414e8b3f24761e9c9437_Progressive<TInputBuffer>
            : global::fs.FileSystemObject
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.String __index0Value;
            private fs.FileSystemType __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_ec725e253b97414e8b3f24761e9c9437_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.FileSystemObject);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String Name
#else
            public override System.String Name
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.FileSystemType Type
#else
            public override fs.FileSystemType Type
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Name");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemType ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {

                bool allZero = true;
                bool anyZero = false;


                int relativeOffset0 = vtable.OffsetOf<TInputBuffer>(buffer, 1);
                bool isZero0 = relativeOffset0 == 0;
                allZero &= isZero0;


                anyZero |= isZero0;


                int relativeOffset1 = vtable.OffsetOf<TInputBuffer>(buffer, 2);
                bool isZero1 = relativeOffset1 == 0;
                allZero &= isZero1;


                anyZero |= isZero1;


                if (allZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Type");
                }

                if (anyZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_UnionOnlyPartiallyPresent("fs.FileSystemObject.Type");
                }

                var absoluteLocations = (relativeOffset0 + offset, relativeOffset1 + offset);
                return global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.Parse_Progressive(buffer, ref absoluteLocations, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.tableReader_ec725e253b97414e8b3f24761e9c9437_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_ec725e253b97414e8b3f24761e9c9437_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy FileSystemObject")]
        internal sealed class tableReader_ec725e253b97414e8b3f24761e9c9437_Greedy<TInputBuffer>
            : global::fs.FileSystemObject
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.String __index0Value;
            private fs.FileSystemType __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_ec725e253b97414e8b3f24761e9c9437_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.FileSystemObject);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String Name
#else
            public override System.String Name
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.FileSystemType Type
#else
            public override fs.FileSystemType Type
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Name");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemType ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {

                bool allZero = true;
                bool anyZero = false;


                int relativeOffset0 = vtable.OffsetOf<TInputBuffer>(buffer, 1);
                bool isZero0 = relativeOffset0 == 0;
                allZero &= isZero0;


                anyZero |= isZero0;


                int relativeOffset1 = vtable.OffsetOf<TInputBuffer>(buffer, 2);
                bool isZero1 = relativeOffset1 == 0;
                allZero &= isZero1;


                anyZero |= isZero1;


                if (allZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Type");
                }

                if (anyZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_UnionOnlyPartiallyPresent("fs.FileSystemObject.Type");
                }

                var absoluteLocations = (relativeOffset0 + offset, relativeOffset1 + offset);
                return global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.Parse_Greedy(buffer, ref absoluteLocations, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.tableReader_ec725e253b97414e8b3f24761e9c9437_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_ec725e253b97414e8b3f24761e9c9437_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable FileSystemObject")]
        internal sealed class tableReader_ec725e253b97414e8b3f24761e9c9437_GreedyMutable<TInputBuffer>
            : global::fs.FileSystemObject
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.String __index0Value;
            private fs.FileSystemType __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_ec725e253b97414e8b3f24761e9c9437_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.FileSystemObject);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String Name
#else
            public override System.String Name
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.FileSystemType Type
#else
            public override fs.FileSystemType Type
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Name");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemType ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {

                bool allZero = true;
                bool anyZero = false;


                int relativeOffset0 = vtable.OffsetOf<TInputBuffer>(buffer, 1);
                bool isZero0 = relativeOffset0 == 0;
                allZero &= isZero0;


                anyZero |= isZero0;


                int relativeOffset1 = vtable.OffsetOf<TInputBuffer>(buffer, 2);
                bool isZero1 = relativeOffset1 == 0;
                allZero &= isZero1;


                anyZero |= isZero1;


                if (allZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.FileSystemObject.Type");
                }

                if (anyZero)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidData_UnionOnlyPartiallyPresent("fs.FileSystemObject.Type");
                }

                var absoluteLocations = (relativeOffset0 + offset, relativeOffset1 + offset);
                return global::FlatSharp.Compiler.Generated.N38CA8F7CE90AD997C1BD6D1A144CC5B9F0895674B00D6A6EA90FB4300441AECE.Helpers.Parse_GreedyMutable(buffer, ref absoluteLocations, remainingDepth);
            }
        }


        private static class tableMetadata_235c49822392442cbe0d40007d874e6d
        {

            public static readonly TableFieldContext Name = new TableFieldContext(
                "fs.FileSystemObject.Name",
                false,
                false);

            public static readonly TableFieldContext Type = new TableFieldContext(
                "fs.FileSystemObject.Type",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542
{
    internal class Serializer : IGeneratedSerializer<global::fs.FileSystemObject>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.FileSystemObject root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.FileSystemObject root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.FileSystemObject ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.FileSystemObject ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.FileSystemObject ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.FileSystemObject ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using fs;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::fs.HashRequest value)
        {

            int runningSum = 78 + 7;

            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::fs.HashRequest value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(75, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[6];

            var index0Value = value.Hash;

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                index0Offset = currentOffset;
                currentOffset += 64;


                global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset);


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("fs.HashRequest.Hash");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 75 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.tableReader_de0e5a54b58741598f01273e297f3258_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_de0e5a54b58741598f01273e297f3258_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy HashRequest")]
        internal sealed class tableReader_de0e5a54b58741598f01273e297f3258_Lazy<TInputBuffer>
            : global::fs.HashRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_de0e5a54b58741598f01273e297f3258_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.HashRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.HashRequest.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.tableReader_de0e5a54b58741598f01273e297f3258_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_de0e5a54b58741598f01273e297f3258_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive HashRequest")]
        internal sealed class tableReader_de0e5a54b58741598f01273e297f3258_Progressive<TInputBuffer>
            : global::fs.HashRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private fs.Hash __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_de0e5a54b58741598f01273e297f3258_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.HashRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.HashRequest.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.tableReader_de0e5a54b58741598f01273e297f3258_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_de0e5a54b58741598f01273e297f3258_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy HashRequest")]
        internal sealed class tableReader_de0e5a54b58741598f01273e297f3258_Greedy<TInputBuffer>
            : global::fs.HashRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private fs.Hash __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_de0e5a54b58741598f01273e297f3258_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.HashRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.HashRequest.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.tableReader_de0e5a54b58741598f01273e297f3258_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_de0e5a54b58741598f01273e297f3258_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable HashRequest")]
        internal sealed class tableReader_de0e5a54b58741598f01273e297f3258_GreedyMutable<TInputBuffer>
            : global::fs.HashRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private fs.Hash __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_de0e5a54b58741598f01273e297f3258_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(fs.HashRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("fs.HashRequest.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_8922c5feaa3a4c83994f2eaa8c439f06
        {

            public static readonly TableFieldContext Hash = new TableFieldContext(
                "fs.HashRequest.Hash",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764
{
    internal class Serializer : IGeneratedSerializer<global::fs.HashRequest>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::fs.HashRequest root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::fs.HashRequest root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::fs.HashRequest ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.HashRequest ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.HashRequest ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::fs.HashRequest ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using tracker;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::tracker.Empty value)
        {

            int runningSum = 7 + 5;

            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::tracker.Empty value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(4, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 4;
            Span<byte> vtable = stackalloc byte[4];

            int tableLength = currentOffset - tableStart;
            context.Offset -= 4 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.tableReader_8aa5462efa834ac4bdb86891e35d5398_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_8aa5462efa834ac4bdb86891e35d5398_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy Empty")]
        internal sealed class tableReader_8aa5462efa834ac4bdb86891e35d5398_Lazy<TInputBuffer>
            : global::tracker.Empty
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_8aa5462efa834ac4bdb86891e35d5398_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.Empty);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;



        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.tableReader_8aa5462efa834ac4bdb86891e35d5398_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_8aa5462efa834ac4bdb86891e35d5398_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive Empty")]
        internal sealed class tableReader_8aa5462efa834ac4bdb86891e35d5398_Progressive<TInputBuffer>
            : global::tracker.Empty
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_8aa5462efa834ac4bdb86891e35d5398_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.Empty);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;



        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.tableReader_8aa5462efa834ac4bdb86891e35d5398_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_8aa5462efa834ac4bdb86891e35d5398_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy Empty")]
        internal sealed class tableReader_8aa5462efa834ac4bdb86891e35d5398_Greedy<TInputBuffer>
            : global::tracker.Empty
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);






#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_8aa5462efa834ac4bdb86891e35d5398_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.Empty);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;



        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.tableReader_8aa5462efa834ac4bdb86891e35d5398_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_8aa5462efa834ac4bdb86891e35d5398_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable Empty")]
        internal sealed class tableReader_8aa5462efa834ac4bdb86891e35d5398_GreedyMutable<TInputBuffer>
            : global::tracker.Empty
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);






#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_8aa5462efa834ac4bdb86891e35d5398_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.Empty);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;



        }


        private static class tableMetadata_879cb6c3d4b549d9997dc010b395427f
        {

        }

    }
}


namespace FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C
{
    internal class Serializer : IGeneratedSerializer<global::tracker.Empty>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::tracker.Empty root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::tracker.Empty root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::tracker.Empty ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.Empty ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.Empty ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.Empty ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using tracker;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::tracker.ObjectWithHash value)
        {

            int runningSum = 85 + 9;
            var index0Value = value.Object;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::tracker.ObjectWithHash value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(82, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 8;
            Span<byte> vtable = stackalloc byte[8];

            var index0Value = value.Object;
            var index1Value = value.Hash;

            var index1Offset = tableStart;
            if (!(index1Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                index1Offset = currentOffset;
                currentOffset += 64;


                global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Serialize(spanWriter, span, index1Value!, index1Offset);


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("tracker.ObjectWithHash.Hash");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("tracker.ObjectWithHash.Object");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 82 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.tableReader_7411e854006047b09caa0cf0b716890b_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_7411e854006047b09caa0cf0b716890b_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy ObjectWithHash")]
        internal sealed class tableReader_7411e854006047b09caa0cf0b716890b_Lazy<TInputBuffer>
            : global::tracker.ObjectWithHash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_7411e854006047b09caa0cf0b716890b_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.ObjectWithHash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override fs.FileSystemObject Object
#else
            public override fs.FileSystemObject Object
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemObject ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Object");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.tableReader_7411e854006047b09caa0cf0b716890b_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_7411e854006047b09caa0cf0b716890b_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive ObjectWithHash")]
        internal sealed class tableReader_7411e854006047b09caa0cf0b716890b_Progressive<TInputBuffer>
            : global::tracker.ObjectWithHash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private fs.FileSystemObject __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_7411e854006047b09caa0cf0b716890b_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                this.__index1Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.ObjectWithHash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override fs.FileSystemObject Object
#else
            public override fs.FileSystemObject Object
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemObject ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Object");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.tableReader_7411e854006047b09caa0cf0b716890b_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_7411e854006047b09caa0cf0b716890b_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy ObjectWithHash")]
        internal sealed class tableReader_7411e854006047b09caa0cf0b716890b_Greedy<TInputBuffer>
            : global::tracker.ObjectWithHash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private fs.FileSystemObject __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_7411e854006047b09caa0cf0b716890b_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.ObjectWithHash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override fs.FileSystemObject Object
#else
            public override fs.FileSystemObject Object
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemObject ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Object");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.tableReader_7411e854006047b09caa0cf0b716890b_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_7411e854006047b09caa0cf0b716890b_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable ObjectWithHash")]
        internal sealed class tableReader_7411e854006047b09caa0cf0b716890b_GreedyMutable<TInputBuffer>
            : global::tracker.ObjectWithHash
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private fs.FileSystemObject __index0Value;
            private fs.Hash __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_7411e854006047b09caa0cf0b716890b_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.ObjectWithHash);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override fs.FileSystemObject Object
#else
            public override fs.FileSystemObject Object
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            public required override fs.Hash Hash
#else
            public override fs.Hash Hash
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.FileSystemObject ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Object");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static fs.Hash ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.ObjectWithHash.Hash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N6A880A0FE207B7EB7087A7899111502081B850F6D74C6C67DD507152102C5694.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_6d83d33cd37a4e45876a00741948a182
        {

            public static readonly TableFieldContext Object = new TableFieldContext(
                "tracker.ObjectWithHash.Object",
                false,
                false);

            public static readonly TableFieldContext Hash = new TableFieldContext(
                "tracker.ObjectWithHash.Hash",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF
{
    internal class Serializer : IGeneratedSerializer<global::tracker.ObjectWithHash>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::tracker.ObjectWithHash root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::tracker.ObjectWithHash root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::tracker.ObjectWithHash ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.ObjectWithHash ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.ObjectWithHash ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.ObjectWithHash ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using tracker;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::tracker.PeerRequest value)
        {

            int runningSum = 17 + 9;
            var index0Value = value.ChunkHash;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::tracker.PeerRequest value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(14, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[8];

            var index0Value = value.ChunkHash;
            var index1Value = value.MaxPeerCount;

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("tracker.PeerRequest.ChunkHash");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);

            var index1Offset = tableStart;
            if (index1Value != default(System.Int16))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 2);
                index1Offset = currentOffset;
                currentOffset += 2;


                global::FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193.Helpers.Serialize(spanWriter, span, index1Value, index1Offset);

                vtableLength = 8;
            }

            spanWriter.WriteUShort(vtable, (ushort)(index1Offset - tableStart), 6);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 14 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_97aa481218a64149bc0c25e95927e332.ChunkHash);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.tableReader_a0ff3d23055e49968303fced2b07fd65_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_a0ff3d23055e49968303fced2b07fd65_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy PeerRequest")]
        internal sealed class tableReader_a0ff3d23055e49968303fced2b07fd65_Lazy<TInputBuffer>
            : global::tracker.PeerRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_a0ff3d23055e49968303fced2b07fd65_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String ChunkHash
#else
            public override System.String ChunkHash
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public override System.Int16 MaxPeerCount
#else
            public override System.Int16 MaxPeerCount
#endif
            {
                get
                {
                    return ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerRequest.ChunkHash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int16 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int16);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.tableReader_a0ff3d23055e49968303fced2b07fd65_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_a0ff3d23055e49968303fced2b07fd65_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive PeerRequest")]
        internal sealed class tableReader_a0ff3d23055e49968303fced2b07fd65_Progressive<TInputBuffer>
            : global::tracker.PeerRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.String __index0Value;
            private System.Int16 __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_a0ff3d23055e49968303fced2b07fd65_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String ChunkHash
#else
            public override System.String ChunkHash
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public override System.Int16 MaxPeerCount
#else
            public override System.Int16 MaxPeerCount
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)2) == 0)
                    {
                        this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)2);
                    }
                    return this.__index1Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerRequest.ChunkHash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int16 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int16);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.tableReader_a0ff3d23055e49968303fced2b07fd65_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_a0ff3d23055e49968303fced2b07fd65_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy PeerRequest")]
        internal sealed class tableReader_a0ff3d23055e49968303fced2b07fd65_Greedy<TInputBuffer>
            : global::tracker.PeerRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.String __index0Value;
            private System.Int16 __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_a0ff3d23055e49968303fced2b07fd65_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String ChunkHash
#else
            public override System.String ChunkHash
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

#if NET7_0_OR_GREATER
            public override System.Int16 MaxPeerCount
#else
            public override System.Int16 MaxPeerCount
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerRequest.ChunkHash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int16 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int16);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.tableReader_a0ff3d23055e49968303fced2b07fd65_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_a0ff3d23055e49968303fced2b07fd65_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable PeerRequest")]
        internal sealed class tableReader_a0ff3d23055e49968303fced2b07fd65_GreedyMutable<TInputBuffer>
            : global::tracker.PeerRequest
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.String __index0Value;
            private System.Int16 __index1Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_a0ff3d23055e49968303fced2b07fd65_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                this.__index1Value = ReadIndex1Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerRequest);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String ChunkHash
#else
            public override System.String ChunkHash
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

#if NET7_0_OR_GREATER
            public override System.Int16 MaxPeerCount
#else
            public override System.Int16 MaxPeerCount
#endif
            {
                get
                {
                    return this.__index1Value;
                }

                set
                {
                    this.__index1Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerRequest.ChunkHash");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int16 ReadIndex1Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 1);
                    if (relativeOffset == 0)
                    {
                        return default(System.Int16);
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_97aa481218a64149bc0c25e95927e332
        {

            public static readonly TableFieldContext ChunkHash = new TableFieldContext(
                "tracker.PeerRequest.ChunkHash",
                false,
                false);

            public static readonly TableFieldContext MaxPeerCount = new TableFieldContext(
                "tracker.PeerRequest.MaxPeerCount",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24
{
    internal class Serializer : IGeneratedSerializer<global::tracker.PeerRequest>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::tracker.PeerRequest root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::tracker.PeerRequest root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::tracker.PeerRequest ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerRequest ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerRequest ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerRequest ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N9CBCE75A2BC26BBA2ED1E6F2E5F55E58F4574F2859145403829FFA68EF023193
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {

        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static int GetMaxSize(global::System.Int16 value)
        {
            return 3;
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Int16 value,
            int offset

            ) where TSpanWriter : ISpanWriter
        {
            spanWriter.WriteShort(span, value, offset);
        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static short Parse<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadShort(offset);
        }


    }
}




namespace FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using tracker;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::tracker.PeerResponse value)
        {

            int runningSum = 14 + 7;
            var index0Value = value.PeerUri;

            if (!(index0Value is null))
            {
                runningSum += global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::tracker.PeerResponse value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(11, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[6];

            var index0Value = value.PeerUri;

            var index0Offset = tableStart;
            if (!(index0Value is null))
            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }
            else
            {
                global::FlatSharp.Internal.FSThrow.InvalidOperation_RequiredPropertyNotSet("tracker.PeerResponse.PeerUri");
            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 11 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Serialize(spanWriter, span, index0Value!, index0Offset, context, tableMetadata_2b33238da5694a7a8144a2ad34fc237d.PeerUri);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.tableReader_d110e72a16a042fb93c1ee0613421a10_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d110e72a16a042fb93c1ee0613421a10_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy PeerResponse")]
        internal sealed class tableReader_d110e72a16a042fb93c1ee0613421a10_Lazy<TInputBuffer>
            : global::tracker.PeerResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d110e72a16a042fb93c1ee0613421a10_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String PeerUri
#else
            public override System.String PeerUri
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerResponse.PeerUri");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.tableReader_d110e72a16a042fb93c1ee0613421a10_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d110e72a16a042fb93c1ee0613421a10_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive PeerResponse")]
        internal sealed class tableReader_d110e72a16a042fb93c1ee0613421a10_Progressive<TInputBuffer>
            : global::tracker.PeerResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d110e72a16a042fb93c1ee0613421a10_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                this.__index0Value = null!;
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.String PeerUri
#else
            public override System.String PeerUri
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerResponse.PeerUri");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.tableReader_d110e72a16a042fb93c1ee0613421a10_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d110e72a16a042fb93c1ee0613421a10_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy PeerResponse")]
        internal sealed class tableReader_d110e72a16a042fb93c1ee0613421a10_Greedy<TInputBuffer>
            : global::tracker.PeerResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d110e72a16a042fb93c1ee0613421a10_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String PeerUri
#else
            public override System.String PeerUri
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerResponse.PeerUri");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.tableReader_d110e72a16a042fb93c1ee0613421a10_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d110e72a16a042fb93c1ee0613421a10_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable PeerResponse")]
        internal sealed class tableReader_d110e72a16a042fb93c1ee0613421a10_GreedyMutable<TInputBuffer>
            : global::tracker.PeerResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.String __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d110e72a16a042fb93c1ee0613421a10_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(tracker.PeerResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.String PeerUri
#else
            public override System.String PeerUri
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.String ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("tracker.PeerResponse.PeerUri");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N713267F71061CB50DD0B6E0459A8B28F01DB10694EEF7B2C6253EFEEF1AAB66E.Helpers.Parse(buffer, absoluteLocation, remainingDepth);
            }
        }


        private static class tableMetadata_2b33238da5694a7a8144a2ad34fc237d
        {

            public static readonly TableFieldContext PeerUri = new TableFieldContext(
                "tracker.PeerResponse.PeerUri",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76
{
    internal class Serializer : IGeneratedSerializer<global::tracker.PeerResponse>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::tracker.PeerResponse root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::tracker.PeerResponse root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::tracker.PeerResponse ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerResponse ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerResponse ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::tracker.PeerResponse ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using node;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::node.ChunkResponse value)
        {

            int runningSum = 14 + 7;
            var index0Value = value.Response;


            {
                runningSum += global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.GetMaxSize(index0Value);
            }
            return runningSum;

        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::node.ChunkResponse value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {

            int tableStart = context.AllocateSpace(11, sizeof(int));
            spanWriter.WriteUOffset(span, offset, tableStart);
            int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

            int vtableLength = 6;
            Span<byte> vtable = stackalloc byte[6];

            var index0Value = value.Response;

            var index0Offset = tableStart;

            {


                currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                index0Offset = currentOffset;
                currentOffset += 4;


            }

            spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
            int tableLength = currentOffset - tableStart;
            context.Offset -= 11 - tableLength;
            spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
            spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
            int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
            spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);

            if (index0Offset != tableStart)
            {


                global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.Serialize(spanWriter, span, index0Value, index0Offset, context);

            }

        }



        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Lazy<TInputBuffer> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Lazy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Lazy ChunkResponse")]
        internal sealed class tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Lazy<TInputBuffer>
            : global::node.ChunkResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Lazy);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Lazy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(node.ChunkResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.Memory<System.Byte> Response
#else
            public override System.Memory<System.Byte> Response
#endif
            {
                get
                {
                    return ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Memory<System.Byte> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("node.ChunkResponse.Response");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.Parse_Lazy(buffer, absoluteLocation, remainingDepth, tableMetadata_9a52c6516bcb4f70b28a4ce7467e5a44.Response);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Progressive<TInputBuffer> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Progressive<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Progressive ChunkResponse")]
        internal sealed class tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Progressive<TInputBuffer>
            : global::node.ChunkResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Progressive);



            private TInputBuffer __buffer;
            private int __offset;
            private short __remainingDepth;
            private VTable4 __vtable;
            private byte __mask0;
            private System.Memory<System.Byte> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Progressive(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                this.__buffer = buffer;
                this.__offset = offset;
                this.__remainingDepth = remainingDepth;
                VTable4.Create<TInputBuffer>(buffer, offset, out this.__vtable);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(node.ChunkResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => this.__buffer;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => true;


#if NET7_0_OR_GREATER
            public required override System.Memory<System.Byte> Response
#else
            public override System.Memory<System.Byte> Response
#endif
            {
                get
                {

                    if ((this.__mask0 & (byte)1) == 0)
                    {
                        this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtable, this.__remainingDepth);
                        global::FlatSharp.Internal.SerializationHelpers.CombineMask(ref this.__mask0, (byte)1);
                    }
                    return this.__index0Value;

                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Memory<System.Byte> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("node.ChunkResponse.Response");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.Parse_Progressive(buffer, absoluteLocation, remainingDepth, tableMetadata_9a52c6516bcb4f70b28a4ce7467e5a44.Response);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Greedy<TInputBuffer> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Greedy<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("Greedy ChunkResponse")]
        internal sealed class tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Greedy<TInputBuffer>
            : global::node.ChunkResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.Greedy);



            private System.Memory<System.Byte> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_Greedy(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(node.ChunkResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.Memory<System.Byte> Response
#else
            public override System.Memory<System.Byte> Response
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    global::FlatSharp.Internal.FSThrow.NotMutable();
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Memory<System.Byte> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("node.ChunkResponse.Response");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.Parse_Greedy(buffer, absoluteLocation, remainingDepth, tableMetadata_9a52c6516bcb4f70b28a4ce7467e5a44.Response);
            }
        }


        [global::System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        internal static FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_GreedyMutable<TInputBuffer> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            ) where TInputBuffer : IInputBuffer
        {

            return new tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_GreedyMutable<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset), remainingDepth);
        }

        [System.Diagnostics.DebuggerDisplay("GreedyMutable ChunkResponse")]
        internal sealed class tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_GreedyMutable<TInputBuffer>
            : global::node.ChunkResponse
            , global::FlatSharp.IFlatBufferDeserializedObject
            where TInputBuffer : IInputBuffer
        {
            private static readonly global::FlatSharp.FlatBufferDeserializationContext __CtorContext
                = new global::FlatSharp.FlatBufferDeserializationContext(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);



            private System.Memory<System.Byte> __index0Value;


#pragma warning disable CS8618
#if NET7_0_OR_GREATER
            [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
            [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public tableReader_d3ec8b1c84d342b1bfe3a0293d38854f_GreedyMutable(TInputBuffer buffer, int offset, short remainingDepth)
                : base(__CtorContext)
            {
                VTable4.Create<TInputBuffer>(buffer, offset, out var vtable);
                this.__index0Value = ReadIndex0Value(buffer, offset, vtable, remainingDepth);
                base.OnFlatSharpDeserialized(__CtorContext);
            }
#pragma warning restore CS8618


            global::System.Type global::FlatSharp.IFlatBufferDeserializedObject.TableOrStructType => typeof(node.ChunkResponse);
            global::FlatSharp.FlatBufferDeserializationContext global::FlatSharp.IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
            global::FlatSharp.IInputBuffer? global::FlatSharp.IFlatBufferDeserializedObject.InputBuffer => null;

            bool global::FlatSharp.IFlatBufferDeserializedObject.CanSerializeWithMemoryCopy => false;


#if NET7_0_OR_GREATER
            public required override System.Memory<System.Byte> Response
#else
            public override System.Memory<System.Byte> Response
#endif
            {
                get
                {
                    return this.__index0Value;
                }

                set
                {
                    this.__index0Value = value;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Memory<System.Byte> ReadIndex0Value(
                TInputBuffer buffer,
                int offset,
                VTable4 vtable,
                short remainingDepth)
            {


                int absoluteLocation;
                {
                    int relativeOffset = vtable.OffsetOf(buffer, 0);
                    if (relativeOffset == 0)
                    {
                        global::FlatSharp.Internal.FSThrow.InvalidData_RequiredPropertyNotSet("node.ChunkResponse.Response");
                    }

                    absoluteLocation = offset + relativeOffset;
                }

                return global::FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB.Helpers.Parse_GreedyMutable(buffer, absoluteLocation, remainingDepth, tableMetadata_9a52c6516bcb4f70b28a4ce7467e5a44.Response);
            }
        }


        private static class tableMetadata_9a52c6516bcb4f70b28a4ce7467e5a44
        {

            public static readonly TableFieldContext Response = new TableFieldContext(
                "node.ChunkResponse.Response",
                false,
                false);
        }

    }
}


namespace FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1
{
    internal class Serializer : IGeneratedSerializer<global::node.ChunkResponse>
    {
        // Method generated to help AOT compilers make good decisions about generics.
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public void __AotHelper()
        {
            this.Write<ISpanWriter>(default!, new byte[10], default!, default!);
            this.Write<SpanWriter>(default!, new byte[10], default!, default!);

            this.ParseLazy<IInputBuffer>(default!, default);
            this.ParseLazy<MemoryInputBuffer>(default!, default);
            this.ParseLazy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseLazy<ArrayInputBuffer>(default!, default);
            this.ParseLazy<ArraySegmentInputBuffer>(default!, default);

            this.ParseProgressive<IInputBuffer>(default!, default);
            this.ParseProgressive<MemoryInputBuffer>(default!, default);
            this.ParseProgressive<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseProgressive<ArrayInputBuffer>(default!, default);
            this.ParseProgressive<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedy<IInputBuffer>(default!, default);
            this.ParseGreedy<MemoryInputBuffer>(default!, default);
            this.ParseGreedy<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedy<ArrayInputBuffer>(default!, default);
            this.ParseGreedy<ArraySegmentInputBuffer>(default!, default);

            this.ParseGreedyMutable<IInputBuffer>(default!, default);
            this.ParseGreedyMutable<MemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ReadOnlyMemoryInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArrayInputBuffer>(default!, default);
            this.ParseGreedyMutable<ArraySegmentInputBuffer>(default!, default);

            global::FlatSharp.Internal.FSThrow.InvalidOperation_AotHelper();
        }

        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public Serializer()
        {
            global::FlatSharp.Internal.FlatSharpInternal.AssertFlatSharpRuntimeVersionMatches("7.8.0");
        }


        public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, global::node.ChunkResponse root, SerializationContext context)
            where TSpanWriter : ISpanWriter
        {
            context.Offset = 4;
            global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.Serialize(writer, target, root, 0, context);
        }


        public int GetMaxSize(global::node.ChunkResponse root)
        {
            int maxSize = 0;

            maxSize += global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.GetMaxSize(root);
            return maxSize;
        }


        public global::node.ChunkResponse ParseGreedy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.Parse_Greedy(buffer, args.Offset, args.DepthLimit);
        }


        public global::node.ChunkResponse ParseGreedyMutable<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.Parse_GreedyMutable(buffer, args.Offset, args.DepthLimit);
        }


        public global::node.ChunkResponse ParseProgressive<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.Parse_Progressive(buffer, args.Offset, args.DepthLimit);
        }


        public global::node.ChunkResponse ParseLazy<TInputBuffer>(TInputBuffer buffer, in global::FlatSharp.Internal.GeneratedSerializerParseArguments args)
            where TInputBuffer : IInputBuffer
        {
            return global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Helpers.Parse_Lazy(buffer, args.Offset, args.DepthLimit);
        }

    }
}



namespace FlatSharp.Compiler.Generated.N331F001CF321CF11BC240659FDA5763A47292410D345E51BA8E5F3343A16B6FB
{
    // Make sure we can reference the namespace of the type we are using.
    // Ensures that extension methods, etc are available.
    using System;

    internal static class Helpers
    {


        internal static int GetMaxSize(global::System.Memory<System.Byte> value)
        {
            return 7 + (checked(1 * value.Length));
        }



        internal static void Serialize<TSpanWriter>(
            TSpanWriter spanWriter,
            Span<byte> span,
            global::System.Memory<System.Byte> value,
            int offset
            , SerializationContext context
            ) where TSpanWriter : ISpanWriter
        {
            spanWriter.WriteReadOnlyByteMemoryBlock(span, value, offset, context);
        }




        internal static global::System.Memory<System.Byte> Parse_Lazy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadByteMemoryBlock(offset);
        }



        internal static global::System.Memory<System.Byte> Parse_Progressive<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadByteMemoryBlock(offset);
        }



        internal static global::System.Memory<System.Byte> Parse_Greedy<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadByteMemoryBlock(offset).ToArray().AsMemory();
        }



        internal static global::System.Memory<System.Byte> Parse_GreedyMutable<TInputBuffer>(
            TInputBuffer buffer,
            int offset,
            short remainingDepth
            , TableFieldContext fieldContext) where TInputBuffer : IInputBuffer
        {

            return buffer.ReadByteMemoryBlock(offset).ToArray().AsMemory();
        }


    }
}



namespace fs
{
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial struct FileSystemType : IFlatBufferUnion<fs.File, fs.Directory, fs.Link>
    {
        public enum ItemKind : byte
        {
            File = 1,
            Directory = 2,
            Link = 3,
            NONE = 0,
        }


        private readonly object value;

        public ItemKind Kind => (ItemKind)this.Discriminator;

        public byte Discriminator { get; }
        public FileSystemType(fs.File value)
        {
            if (value is null)
            {
                global::FlatSharp.Internal.FSThrow.ArgumentNull(nameof(value));
            }

            this.Discriminator = 1;
            this.value = value;
        }

        public static implicit operator FileSystemType(fs.File value)
        {
            return new FileSystemType(value);
        }


        private fs.File UncheckedGetItem1()
        {
            return (fs.File)this.value;
        }


        public fs.File File => this.Item1;

        public fs.File Item1
        {
            get
            {
                if (this.Discriminator != 1)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_UnionIsNotOfType();
                }

                return this.UncheckedGetItem1();
            }

        }


        public bool TryGet(out fs.File? value)
        {
            if (this.Discriminator != 1)
            {
                value = default;
                return false;
            }

            value = this.UncheckedGetItem1();
            return true;
        }

        public FileSystemType(fs.Directory value)
        {
            if (value is null)
            {
                global::FlatSharp.Internal.FSThrow.ArgumentNull(nameof(value));
            }

            this.Discriminator = 2;
            this.value = value;
        }

        public static implicit operator FileSystemType(fs.Directory value)
        {
            return new FileSystemType(value);
        }


        private fs.Directory UncheckedGetItem2()
        {
            return (fs.Directory)this.value;
        }


        public fs.Directory Directory => this.Item2;

        public fs.Directory Item2
        {
            get
            {
                if (this.Discriminator != 2)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_UnionIsNotOfType();
                }

                return this.UncheckedGetItem2();
            }

        }


        public bool TryGet(out fs.Directory? value)
        {
            if (this.Discriminator != 2)
            {
                value = default;
                return false;
            }

            value = this.UncheckedGetItem2();
            return true;
        }

        public FileSystemType(fs.Link value)
        {
            if (value is null)
            {
                global::FlatSharp.Internal.FSThrow.ArgumentNull(nameof(value));
            }

            this.Discriminator = 3;
            this.value = value;
        }

        public static implicit operator FileSystemType(fs.Link value)
        {
            return new FileSystemType(value);
        }


        private fs.Link UncheckedGetItem3()
        {
            return (fs.Link)this.value;
        }


        public fs.Link Link => this.Item3;

        public fs.Link Item3
        {
            get
            {
                if (this.Discriminator != 3)
                {
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_UnionIsNotOfType();
                }

                return this.UncheckedGetItem3();
            }

        }


        public bool TryGet(out fs.Link? value)
        {
            if (this.Discriminator != 3)
            {
                value = default;
                return false;
            }

            value = this.UncheckedGetItem3();
            return true;
        }

        /// <summary>
        /// A convenience interface for implementing a visitor.
        /// </summary>
        public interface Visitor<TReturn> : IFlatBufferUnionVisitor<TReturn, fs.File, fs.Directory, fs.Link> { }
        /// <summary>
        /// Accepts a visitor into this FlatBufferUnion. Use a value-type Visitor for maximum performance.
        /// </summary>
        public TReturn Accept<TVisitor, TReturn>(TVisitor visitor)
           where TVisitor : IFlatBufferUnionVisitor<TReturn, fs.File, fs.Directory, fs.Link>
        {
            var disc = this.Discriminator;
            switch (disc)
            {
                case 1: return visitor.Visit(this.UncheckedGetItem1());
                case 2: return visitor.Visit(this.UncheckedGetItem2());
                case 3: return visitor.Visit(this.UncheckedGetItem3());
                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<FileSystemType>(disc);
                    return default(TReturn);
            }

        }

        /// <summary>
        /// Performs a match operation on this Union.
        /// For cases where performance is important, prefer the Accept method to this one.
        /// </summary>
        public TReturn Match<TReturn>(Func<fs.File, TReturn> caseFile, Func<fs.Directory, TReturn> caseDirectory, Func<fs.Link, TReturn> caseLink)
        {
            var disc = this.Discriminator;
            switch (disc)
            {
                case 1: return caseFile(this.UncheckedGetItem1());
                case 2: return caseDirectory(this.UncheckedGetItem2());
                case 3: return caseLink(this.UncheckedGetItem3());
                default:
                    global::FlatSharp.Internal.FSThrow.InvalidOperation_InvalidUnionDiscriminator<FileSystemType>(disc);
                    return default(TReturn);
            }

        }

    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.ChunkHashes")]
    public partial class ChunkHashes
        : object
        , IFlatBufferSerializable<fs.ChunkHashes>
        , IFlatBufferSerializable
    {
        static ChunkHashes()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public ChunkHashes()
        {
            this.ChunkSize = default!;
#if NET7_0_OR_GREATER

#else
            this.Hash = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected ChunkHashes(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public ChunkHashes(ChunkHashes source)
        {
            this.ChunkSize = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.ChunkSize);
            this.Hash = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Hash);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0)]
        public virtual int ChunkSize { get; set; }

        [FlatBufferItemAttribute(1, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.Hash Hash { get; set; }
#else
        public virtual fs.Hash Hash { get; set; }
#endif
        public static ISerializer<fs.ChunkHashes> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.ChunkHashes>)this).Serializer;
        ISerializer<fs.ChunkHashes> IFlatBufferSerializable<fs.ChunkHashes>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.ChunkHashes> IFlatBufferSerializable<fs.ChunkHashes>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.ChunkHashes> IFlatBufferSerializable<fs.ChunkHashes>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.ChunkHashes> IFlatBufferSerializable<fs.ChunkHashes>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.ChunkHashes> IFlatBufferSerializable<fs.ChunkHashes>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N66F7BB732B73EDD501E323CDDB4B0A7AC2D76FF0A63442383CF59BAFD19205D5.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.Directory")]
    public partial class Directory
        : object
        , IFlatBufferSerializable<fs.Directory>
        , IFlatBufferSerializable
    {
        static Directory()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public Directory()
        {
#if NET7_0_OR_GREATER

#else
            this.Entries = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Directory(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public Directory(Directory source)
        {
            this.Entries = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Entries);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual IList<fs.Hash> Entries { get; set; }
#else
        public virtual IList<fs.Hash> Entries { get; set; }
#endif
        public static ISerializer<fs.Directory> Serializer { get; } = new global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.Directory>)this).Serializer;
        ISerializer<fs.Directory> IFlatBufferSerializable<fs.Directory>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.Directory> IFlatBufferSerializable<fs.Directory>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Directory> IFlatBufferSerializable<fs.Directory>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Directory> IFlatBufferSerializable<fs.Directory>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Directory> IFlatBufferSerializable<fs.Directory>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.NBD5CC720F7D791FC83263F3447AC210797BA23DC8CE3B9582C17721D8ACD9033.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.File")]
    public partial class File
        : object
        , IFlatBufferSerializable<fs.File>
        , IFlatBufferSerializable
    {
        static File()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public File()
        {
            this.Size = default!;
#if NET7_0_OR_GREATER

#else
            this.Hashes = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected File(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public File(File source)
        {
            this.Size = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Size);
            this.Hashes = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Hashes);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0)]
        public virtual long Size { get; set; }

        [FlatBufferItemAttribute(1, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.ChunkHashes Hashes { get; set; }
#else
        public virtual fs.ChunkHashes Hashes { get; set; }
#endif
        public static ISerializer<fs.File> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.File>)this).Serializer;
        ISerializer<fs.File> IFlatBufferSerializable<fs.File>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.File> IFlatBufferSerializable<fs.File>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.File> IFlatBufferSerializable<fs.File>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.File> IFlatBufferSerializable<fs.File>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.File> IFlatBufferSerializable<fs.File>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1F2285EC55A596E9F7144772AAE8E89A5123972C83A2AE71169A82D1FFF4EEF7.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.FileSystemObject")]
    public partial class FileSystemObject
        : object
        , IFlatBufferSerializable<fs.FileSystemObject>
        , IFlatBufferSerializable
    {
        static FileSystemObject()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public FileSystemObject()
        {
#if NET7_0_OR_GREATER

#else
            this.Name = default!;
#endif
#if NET7_0_OR_GREATER

#else
            this.Type = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected FileSystemObject(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public FileSystemObject(FileSystemObject source)
        {
            this.Name = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Name);
            this.Type = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Type);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual string Name { get; set; }
#else
        public virtual string Name { get; set; }
#endif

        [FlatBufferItemAttribute(1, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.FileSystemType Type { get; set; }
#else
        public virtual fs.FileSystemType Type { get; set; }
#endif
        public static ISerializer<fs.FileSystemObject> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.FileSystemObject>)this).Serializer;
        ISerializer<fs.FileSystemObject> IFlatBufferSerializable<fs.FileSystemObject>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.FileSystemObject> IFlatBufferSerializable<fs.FileSystemObject>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.FileSystemObject> IFlatBufferSerializable<fs.FileSystemObject>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.FileSystemObject> IFlatBufferSerializable<fs.FileSystemObject>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.FileSystemObject> IFlatBufferSerializable<fs.FileSystemObject>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N700043F76DB03F2107927D81DAC9A5C8572D74DCA5C6D9D1AD829EA5952F9542.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace fs
{
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.Hash")]
    public partial class Hash
        : object
    {
        static Hash()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public Hash()
        {
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Hash(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public Hash(Hash source)
        {
            this.__flatsharp__Data_0 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_0);
            this.__flatsharp__Data_1 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_1);
            this.__flatsharp__Data_2 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_2);
            this.__flatsharp__Data_3 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_3);
            this.__flatsharp__Data_4 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_4);
            this.__flatsharp__Data_5 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_5);
            this.__flatsharp__Data_6 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_6);
            this.__flatsharp__Data_7 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.__flatsharp__Data_7);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[0]")]
        protected virtual long __flatsharp__Data_0 { get; set; }

        [FlatBufferItemAttribute(1)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[1]")]
        protected virtual long __flatsharp__Data_1 { get; set; }

        [FlatBufferItemAttribute(2)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[2]")]
        protected virtual long __flatsharp__Data_2 { get; set; }

        [FlatBufferItemAttribute(3)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[3]")]
        protected virtual long __flatsharp__Data_3 { get; set; }

        [FlatBufferItemAttribute(4)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[4]")]
        protected virtual long __flatsharp__Data_4 { get; set; }

        [FlatBufferItemAttribute(5)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[5]")]
        protected virtual long __flatsharp__Data_5 { get; set; }

        [FlatBufferItemAttribute(6)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[6]")]
        protected virtual long __flatsharp__Data_6 { get; set; }

        [FlatBufferItemAttribute(7)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.Accessor, "", "Data[7]")]
        protected virtual long __flatsharp__Data_7 { get; set; }
        private __Data_Vector? __Data;

        public __Data_Vector Data => (__Data ??= new __Data_Vector(this));

        public partial class __Data_Vector : System.Collections.Generic.IEnumerable<long>
        {
            private readonly fs.Hash item;

            public __Data_Vector(fs.Hash item)
            {
                this.item = item;
            }

            public int Count => 8;

            public long this[int index]
            {
                get
                {
                    var thisItem = this.item;
                    switch (index)
                    {
                        case 0: return thisItem.__flatsharp__Data_0;
                        case 1: return thisItem.__flatsharp__Data_1;
                        case 2: return thisItem.__flatsharp__Data_2;
                        case 3: return thisItem.__flatsharp__Data_3;
                        case 4: return thisItem.__flatsharp__Data_4;
                        case 5: return thisItem.__flatsharp__Data_5;
                        case 6: return thisItem.__flatsharp__Data_6;
                        case 7: return thisItem.__flatsharp__Data_7;
                        default: return global::FlatSharp.Internal.FSThrow.IndexOutOfRange<long>();
                    }

                }


                set
                {
                    var thisItem = this.item;
                    switch (index)
                    {
                        case 0: thisItem.__flatsharp__Data_0 = value; break;
                        case 1: thisItem.__flatsharp__Data_1 = value; break;
                        case 2: thisItem.__flatsharp__Data_2 = value; break;
                        case 3: thisItem.__flatsharp__Data_3 = value; break;
                        case 4: thisItem.__flatsharp__Data_4 = value; break;
                        case 5: thisItem.__flatsharp__Data_5 = value; break;
                        case 6: thisItem.__flatsharp__Data_6 = value; break;
                        case 7: thisItem.__flatsharp__Data_7 = value; break;
                        default: global::FlatSharp.Internal.FSThrow.IndexOutOfRange(); break;
                    }

                }

            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() => this.GetEnumerator();

            public System.Collections.Generic.IEnumerator<long> GetEnumerator()
            {
                var thisItem = this.item;
                yield return thisItem.__flatsharp__Data_0;
                yield return thisItem.__flatsharp__Data_1;
                yield return thisItem.__flatsharp__Data_2;
                yield return thisItem.__flatsharp__Data_3;
                yield return thisItem.__flatsharp__Data_4;
                yield return thisItem.__flatsharp__Data_5;
                yield return thisItem.__flatsharp__Data_6;
                yield return thisItem.__flatsharp__Data_7;
            }

            /// <summary>
            /// Deep copies the first 8 items from the source into this struct vector.
            /// </summary>
            public void CopyFrom(ReadOnlySpan<long> source)
            {
                var thisItem = this.item;
                var s = source;
                thisItem.__flatsharp__Data_7 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[7]);
                thisItem.__flatsharp__Data_6 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[6]);
                thisItem.__flatsharp__Data_5 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[5]);
                thisItem.__flatsharp__Data_4 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[4]);
                thisItem.__flatsharp__Data_3 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[3]);
                thisItem.__flatsharp__Data_2 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[2]);
                thisItem.__flatsharp__Data_1 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[1]);
                thisItem.__flatsharp__Data_0 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[0]);
            }

            /// <summary>
            /// Deep copies the first 8 items from the source into this struct vector.
            /// </summary>
            public void CopyFrom(IReadOnlyList<long> source)
            {
                var thisItem = this.item;
                var s = source;
                thisItem.__flatsharp__Data_7 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[7]);
                thisItem.__flatsharp__Data_6 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[6]);
                thisItem.__flatsharp__Data_5 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[5]);
                thisItem.__flatsharp__Data_4 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[4]);
                thisItem.__flatsharp__Data_3 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[3]);
                thisItem.__flatsharp__Data_2 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[2]);
                thisItem.__flatsharp__Data_1 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[1]);
                thisItem.__flatsharp__Data_0 = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(s[0]);
            }

        }

    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.HashRequest")]
    public partial class HashRequest
        : object
        , IFlatBufferSerializable<fs.HashRequest>
        , IFlatBufferSerializable
    {
        static HashRequest()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public HashRequest()
        {
#if NET7_0_OR_GREATER

#else
            this.Hash = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected HashRequest(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public HashRequest(HashRequest source)
        {
            this.Hash = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Hash);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.Hash Hash { get; set; }
#else
        public virtual fs.Hash Hash { get; set; }
#endif
        public static ISerializer<fs.HashRequest> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.HashRequest>)this).Serializer;
        ISerializer<fs.HashRequest> IFlatBufferSerializable<fs.HashRequest>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.HashRequest> IFlatBufferSerializable<fs.HashRequest>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.HashRequest> IFlatBufferSerializable<fs.HashRequest>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.HashRequest> IFlatBufferSerializable<fs.HashRequest>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.HashRequest> IFlatBufferSerializable<fs.HashRequest>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1472D098FCA58C4FC528FD975ECEA567EB4CFBA975CFDA258C3E078FDE2FB764.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace fs
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("fs.Link")]
    public partial class Link
        : object
        , IFlatBufferSerializable<fs.Link>
        , IFlatBufferSerializable
    {
        static Link()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public Link()
        {
#if NET7_0_OR_GREATER

#else
            this.TargetPath = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Link(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public Link(Link source)
        {
            this.TargetPath = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.TargetPath);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual string TargetPath { get; set; }
#else
        public virtual string TargetPath { get; set; }
#endif
        public static ISerializer<fs.Link> Serializer { get; } = new global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<fs.Link>)this).Serializer;
        ISerializer<fs.Link> IFlatBufferSerializable<fs.Link>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<fs.Link> IFlatBufferSerializable<fs.Link>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Link> IFlatBufferSerializable<fs.Link>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Link> IFlatBufferSerializable<fs.Link>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<fs.Link> IFlatBufferSerializable<fs.Link>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.NEAF1178505783189162151915A58F802197545F6E07CDD7BADD069C5AEA8FF6B.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace tracker
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("tracker.Empty")]
    public partial class Empty
        : object
        , IFlatBufferSerializable<tracker.Empty>
        , IFlatBufferSerializable
    {
        static Empty()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public Empty()
        {
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected Empty(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public Empty(Empty source)
        {
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }

        public static ISerializer<tracker.Empty> Serializer { get; } = new global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<tracker.Empty>)this).Serializer;
        ISerializer<tracker.Empty> IFlatBufferSerializable<tracker.Empty>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<tracker.Empty> IFlatBufferSerializable<tracker.Empty>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.Empty> IFlatBufferSerializable<tracker.Empty>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.Empty> IFlatBufferSerializable<tracker.Empty>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.Empty> IFlatBufferSerializable<tracker.Empty>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.NA79D935552AC3143FAA70656B53BAEFC10DFBEE68FBFBC096DE61D855C0A9F9C.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace tracker
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("tracker.ObjectWithHash")]
    public partial class ObjectWithHash
        : object
        , IFlatBufferSerializable<tracker.ObjectWithHash>
        , IFlatBufferSerializable
    {
        static ObjectWithHash()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public ObjectWithHash()
        {
#if NET7_0_OR_GREATER

#else
            this.Object = default!;
#endif
#if NET7_0_OR_GREATER

#else
            this.Hash = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected ObjectWithHash(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public ObjectWithHash(ObjectWithHash source)
        {
            this.Object = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Object);
            this.Hash = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Hash);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.FileSystemObject Object { get; set; }
#else
        public virtual fs.FileSystemObject Object { get; set; }
#endif

        [FlatBufferItemAttribute(1, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual fs.Hash Hash { get; set; }
#else
        public virtual fs.Hash Hash { get; set; }
#endif
        public static ISerializer<tracker.ObjectWithHash> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<tracker.ObjectWithHash>)this).Serializer;
        ISerializer<tracker.ObjectWithHash> IFlatBufferSerializable<tracker.ObjectWithHash>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<tracker.ObjectWithHash> IFlatBufferSerializable<tracker.ObjectWithHash>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.ObjectWithHash> IFlatBufferSerializable<tracker.ObjectWithHash>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.ObjectWithHash> IFlatBufferSerializable<tracker.ObjectWithHash>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.ObjectWithHash> IFlatBufferSerializable<tracker.ObjectWithHash>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N1BC3D019E025C7CD2855ED66DB5436E59B00F676806CF08544FC47DF2D3B93EF.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace tracker
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("tracker.PeerRequest")]
    public partial class PeerRequest
        : object
        , IFlatBufferSerializable<tracker.PeerRequest>
        , IFlatBufferSerializable
    {
        static PeerRequest()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public PeerRequest()
        {
#if NET7_0_OR_GREATER

#else
            this.ChunkHash = default!;
#endif
            this.MaxPeerCount = default!;
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected PeerRequest(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public PeerRequest(PeerRequest source)
        {
            this.ChunkHash = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.ChunkHash);
            this.MaxPeerCount = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.MaxPeerCount);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual string ChunkHash { get; set; }
#else
        public virtual string ChunkHash { get; set; }
#endif

        [FlatBufferItemAttribute(1)]
        public virtual short MaxPeerCount { get; set; }
        public static ISerializer<tracker.PeerRequest> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<tracker.PeerRequest>)this).Serializer;
        ISerializer<tracker.PeerRequest> IFlatBufferSerializable<tracker.PeerRequest>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerRequest> IFlatBufferSerializable<tracker.PeerRequest>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerRequest> IFlatBufferSerializable<tracker.PeerRequest>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerRequest> IFlatBufferSerializable<tracker.PeerRequest>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerRequest> IFlatBufferSerializable<tracker.PeerRequest>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N394CA72E2554BC21C270563A81450348034F585EDC21297FCD17C526D3281B24.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace tracker
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("tracker.PeerResponse")]
    public partial class PeerResponse
        : object
        , IFlatBufferSerializable<tracker.PeerResponse>
        , IFlatBufferSerializable
    {
        static PeerResponse()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public PeerResponse()
        {
#if NET7_0_OR_GREATER

#else
            this.PeerUri = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected PeerResponse(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public PeerResponse(PeerResponse source)
        {
            this.PeerUri = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.PeerUri);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual string PeerUri { get; set; }
#else
        public virtual string PeerUri { get; set; }
#endif
        public static ISerializer<tracker.PeerResponse> Serializer { get; } = new global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<tracker.PeerResponse>)this).Serializer;
        ISerializer<tracker.PeerResponse> IFlatBufferSerializable<tracker.PeerResponse>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerResponse> IFlatBufferSerializable<tracker.PeerResponse>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerResponse> IFlatBufferSerializable<tracker.PeerResponse>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerResponse> IFlatBufferSerializable<tracker.PeerResponse>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<tracker.PeerResponse> IFlatBufferSerializable<tracker.PeerResponse>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.N47F94011A41FD82345F602D64BAD011EE6CA731A6233B68E676257FCF19D6B76.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace tracker
{
    public static partial class Tracker
    {

        public static class Serializer<T> where T : class
        {
            private static ISerializer<T> __value;
            static Serializer()
            {
                __value = null!;
                System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(Tracker).TypeHandle);
            }

            public static ISerializer<T> Value
            {
                get => __value;
                set => __value = value ?? global::FlatSharp.Internal.FSThrow.ArgumentNull<ISerializer<T>>(nameof(value));
            }
        }


        private static Grpc.Core.Marshaller<T> CreateMarshaller<T>() where T : class
        {
            return Grpc.Core.Marshallers.Create<T>(
                (item, sc) =>
                {
                    Serializer<T>.Value.Write(sc.GetBufferWriter(), item);
                    sc.Complete();
                },
                dc => Serializer<T>.Value.Parse(new ArrayInputBuffer(dc.PayloadAsNewBuffer())));
        }

        private static readonly Grpc.Core.Marshaller<tracker.ObjectWithHash> __Marshaller_172b8906da4540eab87a347561fdfd4b = CreateMarshaller<tracker.ObjectWithHash>();
        private static readonly Grpc.Core.Marshaller<tracker.Empty> __Marshaller_2100318a73554445a238612bc6ba959b = CreateMarshaller<tracker.Empty>();
        private static readonly Grpc.Core.Marshaller<fs.HashRequest> __Marshaller_108e80a605014f589959a1728de50621 = CreateMarshaller<fs.HashRequest>();
        private static readonly Grpc.Core.Marshaller<tracker.PeerRequest> __Marshaller_3b71b14f651047a0919ece7aae3bfed9 = CreateMarshaller<tracker.PeerRequest>();
        private static readonly Grpc.Core.Marshaller<tracker.PeerResponse> __Marshaller_6298ac3eebff4eef82f5cd1a8e58330d = CreateMarshaller<tracker.PeerResponse>();
        private static readonly Grpc.Core.Method<tracker.ObjectWithHash, tracker.Empty> __Method_e889da53a8604545ac07a0ce8eed538f = new Grpc.Core.Method<tracker.ObjectWithHash, tracker.Empty>(
            Grpc.Core.MethodType.ClientStreaming,
            "tracker.Tracker",
            "Publish",
            __Marshaller_172b8906da4540eab87a347561fdfd4b,
            __Marshaller_2100318a73554445a238612bc6ba959b);
        private static readonly Grpc.Core.Method<fs.HashRequest, tracker.ObjectWithHash> __Method_24397e43810841f09a799429483ed361 = new Grpc.Core.Method<fs.HashRequest, tracker.ObjectWithHash>(
            Grpc.Core.MethodType.ServerStreaming,
            "tracker.Tracker",
            "GetObjectTree",
            __Marshaller_108e80a605014f589959a1728de50621,
            __Marshaller_172b8906da4540eab87a347561fdfd4b);
        private static readonly Grpc.Core.Method<fs.HashRequest, tracker.Empty> __Method_41150c9993ba4cbf947057b592aa8003 = new Grpc.Core.Method<fs.HashRequest, tracker.Empty>(
            Grpc.Core.MethodType.ClientStreaming,
            "tracker.Tracker",
            "MarkReachable",
            __Marshaller_108e80a605014f589959a1728de50621,
            __Marshaller_2100318a73554445a238612bc6ba959b);
        private static readonly Grpc.Core.Method<fs.HashRequest, tracker.Empty> __Method_f3f95e27ba8b41e89d4f6e335364e463 = new Grpc.Core.Method<fs.HashRequest, tracker.Empty>(
            Grpc.Core.MethodType.ClientStreaming,
            "tracker.Tracker",
            "MarkUnreachable",
            __Marshaller_108e80a605014f589959a1728de50621,
            __Marshaller_2100318a73554445a238612bc6ba959b);
        private static readonly Grpc.Core.Method<tracker.PeerRequest, tracker.PeerResponse> __Method_95c03662fa5640ab961eb0d8937f542e = new Grpc.Core.Method<tracker.PeerRequest, tracker.PeerResponse>(
            Grpc.Core.MethodType.ServerStreaming,
            "tracker.Tracker",
            "GetPeerList",
            __Marshaller_3b71b14f651047a0919ece7aae3bfed9,
            __Marshaller_6298ac3eebff4eef82f5cd1a8e58330d);
        static partial void OnStaticInitialization();

        static Tracker()
        {
            Serializer<tracker.ObjectWithHash>.Value = tracker.ObjectWithHash.Serializer;
            Serializer<tracker.Empty>.Value = tracker.Empty.Serializer;
            Serializer<fs.HashRequest>.Value = fs.HashRequest.Serializer;
            Serializer<tracker.PeerRequest>.Value = tracker.PeerRequest.Serializer;
            Serializer<tracker.PeerResponse>.Value = tracker.PeerResponse.Serializer;
            OnStaticInitialization();
        }

        [Grpc.Core.BindServiceMethod(typeof(Tracker), "BindService")]
        public abstract partial class TrackerServerBase
        {
            public abstract System.Threading.Tasks.Task<tracker.Empty> Publish(Grpc.Core.IAsyncStreamReader<tracker.ObjectWithHash> requestStream, Grpc.Core.ServerCallContext callContext);
            public abstract System.Threading.Tasks.Task GetObjectTree(fs.HashRequest request, Grpc.Core.IServerStreamWriter<tracker.ObjectWithHash> responseStream, Grpc.Core.ServerCallContext callContext);
            public abstract System.Threading.Tasks.Task<tracker.Empty> MarkReachable(Grpc.Core.IAsyncStreamReader<fs.HashRequest> requestStream, Grpc.Core.ServerCallContext callContext);
            public abstract System.Threading.Tasks.Task<tracker.Empty> MarkUnreachable(Grpc.Core.IAsyncStreamReader<fs.HashRequest> requestStream, Grpc.Core.ServerCallContext callContext);
            public abstract System.Threading.Tasks.Task GetPeerList(tracker.PeerRequest request, Grpc.Core.IServerStreamWriter<tracker.PeerResponse> responseStream, Grpc.Core.ServerCallContext callContext);
        }

        public static Grpc.Core.ServerServiceDefinition BindService(TrackerServerBase? serviceImpl)
        {
#pragma warning disable CS8604
            return Grpc.Core.ServerServiceDefinition.CreateBuilder()
                .AddMethod(__Method_e889da53a8604545ac07a0ce8eed538f, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<tracker.ObjectWithHash, tracker.Empty>?)null : serviceImpl.Publish)
                .AddMethod(__Method_24397e43810841f09a799429483ed361, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, tracker.ObjectWithHash>?)null : serviceImpl.GetObjectTree)
                .AddMethod(__Method_41150c9993ba4cbf947057b592aa8003, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>?)null : serviceImpl.MarkReachable)
                .AddMethod(__Method_f3f95e27ba8b41e89d4f6e335364e463, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>?)null : serviceImpl.MarkUnreachable)
                .AddMethod(__Method_95c03662fa5640ab961eb0d8937f542e, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<tracker.PeerRequest, tracker.PeerResponse>?)null : serviceImpl.GetPeerList)
                .Build();
#pragma warning restore CS8604
        }


        public static void BindService(Grpc.Core.ServiceBinderBase serviceBinder, TrackerServerBase? serviceImpl)
        {
#pragma warning disable CS8604
            serviceBinder.AddMethod(__Method_e889da53a8604545ac07a0ce8eed538f, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<tracker.ObjectWithHash, tracker.Empty>?)null : new Grpc.Core.ClientStreamingServerMethod<tracker.ObjectWithHash, tracker.Empty>(serviceImpl.Publish));
            serviceBinder.AddMethod(__Method_24397e43810841f09a799429483ed361, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, tracker.ObjectWithHash>?)null : new Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, tracker.ObjectWithHash>(serviceImpl.GetObjectTree));
            serviceBinder.AddMethod(__Method_41150c9993ba4cbf947057b592aa8003, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>?)null : new Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>(serviceImpl.MarkReachable));
            serviceBinder.AddMethod(__Method_f3f95e27ba8b41e89d4f6e335364e463, serviceImpl == null ? (Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>?)null : new Grpc.Core.ClientStreamingServerMethod<fs.HashRequest, tracker.Empty>(serviceImpl.MarkUnreachable));
            serviceBinder.AddMethod(__Method_95c03662fa5640ab961eb0d8937f542e, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<tracker.PeerRequest, tracker.PeerResponse>?)null : new Grpc.Core.ServerStreamingServerMethod<tracker.PeerRequest, tracker.PeerResponse>(serviceImpl.GetPeerList));
#pragma warning restore CS8604
        }

        public partial class TrackerClient : Grpc.Core.ClientBase<TrackerClient>
        {
            public TrackerClient(Grpc.Core.ChannelBase channel) : base(channel) { }
            public TrackerClient(Grpc.Core.CallInvoker callInvoker) : base(callInvoker) { }
            protected TrackerClient() : base() { }
            protected TrackerClient(ClientBaseConfiguration configuration) : base(configuration) { }

            protected override TrackerClient NewInstance(ClientBaseConfiguration configuration)
            {
                return new TrackerClient(configuration);
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<tracker.ObjectWithHash, tracker.Empty> Publish(Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return Publish(new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<tracker.ObjectWithHash, tracker.Empty> Publish(Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncClientStreamingCall(__Method_e889da53a8604545ac07a0ce8eed538f, null, options);
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<tracker.ObjectWithHash> GetObjectTree(fs.HashRequest request, Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return GetObjectTree(request, new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<tracker.ObjectWithHash> GetObjectTree(fs.HashRequest request, Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncServerStreamingCall(__Method_24397e43810841f09a799429483ed361, null, options, request);
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<fs.HashRequest, tracker.Empty> MarkReachable(Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return MarkReachable(new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<fs.HashRequest, tracker.Empty> MarkReachable(Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncClientStreamingCall(__Method_41150c9993ba4cbf947057b592aa8003, null, options);
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<fs.HashRequest, tracker.Empty> MarkUnreachable(Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return MarkUnreachable(new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncClientStreamingCall<fs.HashRequest, tracker.Empty> MarkUnreachable(Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncClientStreamingCall(__Method_f3f95e27ba8b41e89d4f6e335364e463, null, options);
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<tracker.PeerResponse> GetPeerList(tracker.PeerRequest request, Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return GetPeerList(request, new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<tracker.PeerResponse> GetPeerList(tracker.PeerRequest request, Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncServerStreamingCall(__Method_95c03662fa5640ab961eb0d8937f542e, null, options, request);
            }

        }

    }

}

namespace node
{
    [FlatBufferTable(BuildSerializer = true)]
    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_serializer", "Lazy")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Diagnostics.DebuggerTypeProxy("node.ChunkResponse")]
    public partial class ChunkResponse
        : object
        , IFlatBufferSerializable<node.ChunkResponse>
        , IFlatBufferSerializable
    {
        static ChunkResponse()
        {
            OnStaticInitialize();
        }

#pragma warning disable CS8618
        public ChunkResponse()
        {
#if NET7_0_OR_GREATER

#else
            this.Response = default!;
#endif
            this.OnInitialized(null);
        }

#pragma warning restore CS8618
#pragma warning disable CS8618
        protected ChunkResponse(FlatBufferDeserializationContext context)
        {
        }

#pragma warning restore CS8618
#if NET7_0_OR_GREATER
        [System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public ChunkResponse(ChunkResponse source)
        {
            this.Response = global::FlatSharp.Compiler.Generated.CloneHelpers_e70f26d82c4244748f5305570754cf4e.Clone(source.Response);
            this.OnInitialized(null);
        }

        static partial void OnStaticInitialize();
        partial void OnInitialized(FlatBufferDeserializationContext? context);
        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext context)
        {
            this.OnInitialized(context);
        }


        [FlatBufferItemAttribute(0, Required = true)]
        [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "required", "0")]
#if NET7_0_OR_GREATER
        required public virtual Memory<byte> Response { get; set; }
#else
        public virtual Memory<byte> Response { get; set; }
#endif
        public static ISerializer<node.ChunkResponse> Serializer { get; } = new global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);

        ISerializer IFlatBufferSerializable.Serializer => (ISerializer)((IFlatBufferSerializable<node.ChunkResponse>)this).Serializer;
        ISerializer<node.ChunkResponse> IFlatBufferSerializable<node.ChunkResponse>.Serializer => Serializer;

#if NET7_0_OR_GREATER
        static ISerializer<node.ChunkResponse> IFlatBufferSerializable<node.ChunkResponse>.LazySerializer { get; } = new global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Lazy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<node.ChunkResponse> IFlatBufferSerializable<node.ChunkResponse>.GreedySerializer { get; } = new global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Greedy);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<node.ChunkResponse> IFlatBufferSerializable<node.ChunkResponse>.GreedyMutableSerializer { get; } = new global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.GreedyMutable);
#endif
#if NET7_0_OR_GREATER
        static ISerializer<node.ChunkResponse> IFlatBufferSerializable<node.ChunkResponse>.ProgressiveSerializer { get; } = new global::FlatSharp.Compiler.Generated.NB09791A2D9B69FA0C3C36ABF9DF0D723F8CCA48AD67E65EA5E9AF6A52FEA8FB1.Serializer().AsISerializer(global::FlatSharp.FlatBufferDeserializationOption.Progressive);
#endif
    }

}

namespace node
{
    public interface INode
    {
        Task GetChunk(fs.HashRequest request, System.Threading.Channels.ChannelWriter<node.ChunkResponse> responseChannel, CancellationToken token);
    }

    [FlatBufferMetadataAttribute(FlatBufferMetadataKind.FbsAttribute, "fs_rpcInterface", "0")]
    public static partial class Node
    {

        public static class Serializer<T> where T : class
        {
            private static ISerializer<T> __value;
            static Serializer()
            {
                __value = null!;
                System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(Node).TypeHandle);
            }

            public static ISerializer<T> Value
            {
                get => __value;
                set => __value = value ?? global::FlatSharp.Internal.FSThrow.ArgumentNull<ISerializer<T>>(nameof(value));
            }
        }


        private static Grpc.Core.Marshaller<T> CreateMarshaller<T>() where T : class
        {
            return Grpc.Core.Marshallers.Create<T>(
                (item, sc) =>
                {
                    Serializer<T>.Value.Write(sc.GetBufferWriter(), item);
                    sc.Complete();
                },
                dc => Serializer<T>.Value.Parse(new ArrayInputBuffer(dc.PayloadAsNewBuffer())));
        }

        private static readonly Grpc.Core.Marshaller<fs.HashRequest> __Marshaller_523b5251eff14b898119796eebec5133 = CreateMarshaller<fs.HashRequest>();
        private static readonly Grpc.Core.Marshaller<node.ChunkResponse> __Marshaller_edbded95dedb4997a453259aab0306f4 = CreateMarshaller<node.ChunkResponse>();
        private static readonly Grpc.Core.Method<fs.HashRequest, node.ChunkResponse> __Method_1a028d2a2293473688214d283af0606c = new Grpc.Core.Method<fs.HashRequest, node.ChunkResponse>(
            Grpc.Core.MethodType.ServerStreaming,
            "node.Node",
            "GetChunk",
            __Marshaller_523b5251eff14b898119796eebec5133,
            __Marshaller_edbded95dedb4997a453259aab0306f4);
        static partial void OnStaticInitialization();

        static Node()
        {
            Serializer<fs.HashRequest>.Value = fs.HashRequest.Serializer;
            Serializer<node.ChunkResponse>.Value = node.ChunkResponse.Serializer;
            OnStaticInitialization();
        }

        [Grpc.Core.BindServiceMethod(typeof(Node), "BindService")]
        public abstract partial class NodeServerBase
        {
            public abstract System.Threading.Tasks.Task GetChunk(fs.HashRequest request, Grpc.Core.IServerStreamWriter<node.ChunkResponse> responseStream, Grpc.Core.ServerCallContext callContext);
        }

        public static Grpc.Core.ServerServiceDefinition BindService(NodeServerBase? serviceImpl)
        {
#pragma warning disable CS8604
            return Grpc.Core.ServerServiceDefinition.CreateBuilder()
                .AddMethod(__Method_1a028d2a2293473688214d283af0606c, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, node.ChunkResponse>?)null : serviceImpl.GetChunk)
                .Build();
#pragma warning restore CS8604
        }


        public static void BindService(Grpc.Core.ServiceBinderBase serviceBinder, NodeServerBase? serviceImpl)
        {
#pragma warning disable CS8604
            serviceBinder.AddMethod(__Method_1a028d2a2293473688214d283af0606c, serviceImpl == null ? (Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, node.ChunkResponse>?)null : new Grpc.Core.ServerStreamingServerMethod<fs.HashRequest, node.ChunkResponse>(serviceImpl.GetChunk));
#pragma warning restore CS8604
        }

        public partial class NodeClient : Grpc.Core.ClientBase<NodeClient>, INode
        {
            public NodeClient(Grpc.Core.ChannelBase channel) : base(channel) { }
            public NodeClient(Grpc.Core.CallInvoker callInvoker) : base(callInvoker) { }
            protected NodeClient() : base() { }
            protected NodeClient(ClientBaseConfiguration configuration) : base(configuration) { }

            protected override NodeClient NewInstance(ClientBaseConfiguration configuration)
            {
                return new NodeClient(configuration);
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<node.ChunkResponse> GetChunk(fs.HashRequest request, Grpc.Core.Metadata? headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                return GetChunk(request, new Grpc.Core.CallOptions(headers, deadline, cancellationToken));
            }

            public virtual Grpc.Core.AsyncServerStreamingCall<node.ChunkResponse> GetChunk(fs.HashRequest request, Grpc.Core.CallOptions options)
            {
                return CallInvoker.AsyncServerStreamingCall(__Method_1a028d2a2293473688214d283af0606c, null, options, request);
            }

            async Task INode.GetChunk(fs.HashRequest request, System.Threading.Channels.ChannelWriter<node.ChunkResponse> responseChannel, CancellationToken token)
            {
                var call = this.GetChunk(request, cancellationToken: token);
                try
                {
                    while (await call.ResponseStream.MoveNext(token))
                    {
                        await responseChannel.WriteAsync(call.ResponseStream.Current, token);
                    }

                    responseChannel.Complete();
                }

                catch (Exception ex)
                {
                    responseChannel.TryComplete(ex);
                    throw;
                }

            }

        }

    }

}

syntax = "proto3";

package tracker;

import "fs/filesystem.proto";
import "rpc_common.proto";

service Tracker
{
	rpc Publish(stream fs.ObjectWithHash) returns (rpc_common.Empty);
	rpc GetObjectTree(rpc_common.Hash) returns (stream fs.ObjectWithHash);
	rpc MarkReachable(stream MarkRequest) returns (rpc_common.Empty);
	rpc MarkUnreachable(stream MarkRequest) returns (rpc_common.Empty);
	rpc GetPeerList(PeerRequest) returns (stream PeerResponse);
	rpc GetContainerRootHash(rpc_common.Guid) returns (rpc_common.Hash);
	rpc SetContainerRootHash(ContainerRootHash) returns (rpc_common.Empty);
	rpc DeleteObjectHash(rpc_common.Hash) returns (rpc_common.Empty);
	rpc SearchForObjects(SearchRequest) returns (stream rpc_common.SearchResponse);
}

message ContainerRootHash
{
	string guid = 1;
	rpc_common.Hash hash = 2;
}

message PeerRequest
{
	bytes chunk_hash = 1;
	int32 max_peer_count = 2;
}

message PeerResponse
{
	string peer = 1;
}

message MarkRequest
{
	string peer = 1;
	bytes hash = 2;
}

message SearchRequest
{
	string query = 1;
}

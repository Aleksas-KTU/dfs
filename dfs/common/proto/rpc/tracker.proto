syntax = "proto3";

package tracker;

import "fs/filesystem.proto";

service Tracker
{
	rpc Publish(stream ObjectWithHash) returns (Empty);
	rpc GetObjectTree(Hash) returns (stream ObjectWithHash);
	rpc MarkReachable(stream Hash) returns (Empty);
	rpc MarkUnreachable(stream Hash) returns (Empty);
	rpc GetPeerList(PeerRequest) returns (stream PeerResponse);
	rpc GetContainerRootHash(ContainerGuid) returns (Hash);
	rpc SetContainerRootHash(ContainerRootHash) returns (Empty);
}

message Empty
{
	// :)
}

message ContainerGuid
{
	string guid = 1;
}

message ContainerRootHash
{
	string guid = 1;
	Hash hash = 2;
}

message PeerRequest
{
	bytes chunk_hash = 1;
	int32 max_peer_count = 2;
}

message Hash
{
	bytes data = 1;
}

message ObjectWithHash
{
	fs.FileSystemObject object = 1;
	bytes hash = 2;
}

message PeerResponse
{
	string peer = 1;
}

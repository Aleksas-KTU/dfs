name: Project build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest
    permissions: read-all

    steps:
      - uses: actions/checkout@v4

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: checkout all the submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache .NET SDK
        uses: actions/cache@v3
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-dotnet-sdk-${{ matrix.dotnet-version }}

      - name: Use Node.js (22.x)
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Restore dependencies
        run: dotnet restore dfs/dfs.slnf

      - name: Build .NET
        run: dotnet build --no-restore dfs/dfs.slnf

  test:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Run .NET tests
        run: |
          for ($i = 1; $i -le 3; $i++) {
            dotnet test /p:ParallelizeTestCollections=false --verbosity normal dfs/dfs.sln
            if ($?) { break }
            Write-Host "Retry $i failed... retrying in 5s"
            Start-Sleep -Seconds 5
          }

  ui-tests:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Restore npm dependencies
        working-directory: ./dfs/electron
        run: npm ci

      - name: Build UI
        working-directory: ./dfs/electron
        run: npm run test-build

      - name: Run Jest tests
        working-directory: ./dfs/electron
        run: npx jest

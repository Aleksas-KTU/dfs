name: Project build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # .NET Build and Test Job
  cs-build:
    runs-on: windows-latest
    permissions: read-all
    needs: [ui]
    steps:
      - uses: actions/checkout@v4

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Checkout submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache .NET SDK
        uses: actions/cache@v3
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-dotnet-sdk-${{ matrix.dotnet-version }}

      - name: Restore .NET dependencies
        run: dotnet restore dfs/dfs.sln

      - name: Download Jest coverage report
        uses: actions/download-artifact@v4
        with:
          name: jest-coverage
          path: ./coverage/jest

      - name: Init SonarScanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet-sonarscanner begin `
          /key:proj00_dfs /o:proj00 `
          /d:sonar.token=${{ secrets.SONAR_TOKEN }} `
          /d:typescript.lcov.reportPaths=coverage/jest/lcov.info

      - name: Build .NET project
        run: dotnet build --no-restore dfs/dfs.sln

      - name: Test .NET project
        run: dotnet test --no-build dfs/dfs.sln --verbosity d --collect "Code Coverage"

      - name: Finish SonarScanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}

  issue-check:
    runs-on: windows-latest
    permissions: read-all
    needs: [cs-build]
    steps:
      - uses: actions/checkout@v4
      - name: Fetch issues
        run: |
          $response = curl "https://sonarcloud.io/api/issues/search?projectKeys=proj00_dfs&resolved=false" | ConvertFrom-Json
          if ($response.total -gt 0){
              Write-Host "Found " $response.total "issues, check sonarcloud report online and address them"
              exit 1
          }
          else {
              Write-Host "No issues :)"
          }

  quality-gate-check:
    runs-on: windows-latest
    permissions: read-all
    needs: [cs-build]
    steps:
      - name: Check Quality Gate
        run: |
          $quality_gate_url = "https://sonarcloud.io/api/qualitygates/project_status?projectKey=proj00_dfs"

          $response = curl "$quality_gate_url"

          $status = ($response | ConvertFrom-Json).projectStatus.status

          if ($status -ne "OK") {
              Write-Host "Quality Gate failed! Your changes did not pass checks (check sonarcloud online)"
              exit 1
          } else {
              Write-Host "Quality Gate passed!"
          }

  # UI Test Job (Jest)
  ui:
    runs-on: windows-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js (22.x)
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Restore npm dependencies
        working-directory: ./dfs/electron
        run: npm ci

      - name: Build UI
        working-directory: ./dfs/electron
        run: npm run test-build

      - name: Run Jest tests with coverage
        working-directory: ./dfs/electron
        run: npx jest --coverage

      - name: Upload Jest Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jest-coverage
          path: dfs/electron/coverage/lcov.info
